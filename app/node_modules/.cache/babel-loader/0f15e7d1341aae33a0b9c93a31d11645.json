{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './rootSaga';\nimport rootReducer from './rootReducer';\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('weight-control', serializedState);\n  } catch {// ignore write errors\n  }\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('weight-control');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const composedMiddleware = process.env.NODE_ENV === 'production' ? applyMiddleware(sagaMiddleware) : compose(applyMiddleware(sagaMiddleware), // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n  const persistentState = loadState();\n  const store = createStore(rootReducer, persistentState, composedMiddleware);\n  store.subscribe(() => {\n    saveState(store.getState());\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/store/config/configureStore.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","rootSaga","rootReducer","saveState","state","serializedState","JSON","stringify","localStorage","setItem","loadState","getItem","undefined","parse","err","configureStore","sagaMiddleware","composedMiddleware","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION__","persistentState","store","subscribe","getState","run"],"mappings":"AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,OAHF,QAIO,OAJP;AAMA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCJ,eAAvC;AACD,GAHD,CAGE,MAAM,CACN;AACD;AACF,CAPD;;AASA,MAAMK,SAAS,GAAG,MAAM;AACtB,MAAI;AACF,UAAML,eAAe,GAAGG,YAAY,CAACG,OAAb,CAAqB,gBAArB,CAAxB;;AACA,QAAIN,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAOO,SAAP;AACD;;AACD,WAAON,IAAI,CAACO,KAAL,CAAWR,eAAX,CAAP;AACD,GAND,CAME,OAAOS,GAAP,EAAY;AACZ,WAAOF,SAAP;AACD;AACF,CAVD;;AAYA,MAAMG,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGhB,oBAAoB,EAA3C;AAEA,QAAMiB,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACvBtB,eAAe,CAACkB,cAAD,CADQ,GAEvBjB,OAAO,CACPD,eAAe,CAACkB,cAAD,CADR,EAEP;AACAK,EAAAA,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAHhC,CAFX;AAQA,QAAMC,eAAe,GAAGb,SAAS,EAAjC;AAEA,QAAMc,KAAK,GAAG3B,WAAW,CACvBK,WADuB,EAEvBqB,eAFuB,EAGvBN,kBAHuB,CAAzB;AAMAO,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBtB,IAAAA,SAAS,CAACqB,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,GAFD;AAIAV,EAAAA,cAAc,CAACW,GAAf,CAAmB1B,QAAnB;AAEA,SAAOuB,KAAP;AACD,CA1BD;;AA4BA,eAAeT,cAAf","sourcesContent":["import {\r\n  createStore,\r\n  applyMiddleware,\r\n  compose,\r\n} from 'redux';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './rootSaga';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('weight-control', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('weight-control');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const composedMiddleware = process.env.NODE_ENV === 'production'\r\n    ? applyMiddleware(sagaMiddleware)\r\n    : compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    );\r\n\r\n  const persistentState = loadState();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    persistentState,\r\n    composedMiddleware,\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    saveState(store.getState());\r\n  });\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}