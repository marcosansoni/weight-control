{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport Endpoint, { urlFactory } from '../../../../constants/Endpoint';\nimport postData from '../../../../utils/fetchMethod/postData';\nimport EndpointStatus from '../../../../constants/EndpointStatus';\nimport RegisterErrorCode from '../constants/RegisterErrorCode';\nimport postRegisterSuccessActionCreator from '../actionCreator/postRegisterSuccessActionCreator';\nimport ErrorCode from '../../../../constants/ErrorCode';\nimport postRegisterErrorActionCreator from '../actionCreator/postRegisterErrorActionCreator';\nimport Error from '../../../../../entities/Error';\nimport postLoginActionCreator from '../../login/actionCreator/postLoginActionCreator';\n\nfunction* postRegisterWorker(action) {\n  const {\n    username,\n    password,\n    email,\n    firstName,\n    lastName\n  } = (action === null || action === void 0 ? void 0 : action.payload) || {};\n  const response = yield postData({\n    url: urlFactory(Endpoint.REGISTER),\n    data: {\n      username,\n      password,\n      firstname: firstName,\n      lastname: lastName,\n      email,\n      photo: 'null'\n    }\n  });\n  const {\n    data,\n    status\n  } = response || {};\n\n  if (status === EndpointStatus.ERROR) {\n    return yield put(postRegisterErrorActionCreator([new Error({\n      message: data === null || data === void 0 ? void 0 : data.message,\n      code: RegisterErrorCode.WRONG_PARAMS\n    })]));\n  }\n\n  if (status === EndpointStatus.SUCCESS) {\n    yield put(postLoginActionCreator(username, password)); // In order to stop fetch into register view\n\n    return yield put(postRegisterSuccessActionCreator());\n  } // Generic errorCode\n\n\n  return yield put(postRegisterErrorActionCreator([new Error({\n    code: ErrorCode.DEFAULT\n  })]));\n}\n\nexport default postRegisterWorker;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/store/state/authentication/register/worker/postRegisterWorker.js"],"names":["put","Endpoint","urlFactory","postData","EndpointStatus","RegisterErrorCode","postRegisterSuccessActionCreator","ErrorCode","postRegisterErrorActionCreator","Error","postLoginActionCreator","postRegisterWorker","action","username","password","email","firstName","lastName","payload","response","url","REGISTER","data","firstname","lastname","photo","status","ERROR","message","code","WRONG_PARAMS","SUCCESS","DEFAULT"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,gCAArC;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,gCAAP,MAA6C,mDAA7C;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,8BAAP,MAA2C,iDAA3C;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,sBAAP,MAAmC,kDAAnC;;AAEA,UAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;AACnC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA;AALI,MAMF,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEM,OAAR,KAAmB,EANvB;AAQA,QAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAAC;AAC9BiB,IAAAA,GAAG,EAAElB,UAAU,CAACD,QAAQ,CAACoB,QAAV,CADe;AAE9BC,IAAAA,IAAI,EAAE;AACJT,MAAAA,QADI;AAEJC,MAAAA,QAFI;AAGJS,MAAAA,SAAS,EAAEP,SAHP;AAIJQ,MAAAA,QAAQ,EAAEP,QAJN;AAKJF,MAAAA,KALI;AAMJU,MAAAA,KAAK,EAAE;AANH;AAFwB,GAAD,CAA/B;AAYA,QAAM;AACJH,IAAAA,IADI;AAEJI,IAAAA;AAFI,MAGFP,QAAQ,IAAI,EAHhB;;AAKA,MAAIO,MAAM,KAAKtB,cAAc,CAACuB,KAA9B,EAAqC;AACnC,WAAO,MAAM3B,GAAG,CAACQ,8BAA8B,CAAC,CAAC,IAAIC,KAAJ,CAAU;AACzDmB,MAAAA,OAAO,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEM,OAD0C;AAEzDC,MAAAA,IAAI,EAAExB,iBAAiB,CAACyB;AAFiC,KAAV,CAAD,CAAD,CAA/B,CAAhB;AAID;;AAED,MAAIJ,MAAM,KAAKtB,cAAc,CAAC2B,OAA9B,EAAuC;AACrC,UAAM/B,GAAG,CAACU,sBAAsB,CAACG,QAAD,EAAWC,QAAX,CAAvB,CAAT,CADqC,CAErC;;AACA,WAAO,MAAMd,GAAG,CAACM,gCAAgC,EAAjC,CAAhB;AACD,GArCkC,CAuCnC;;;AACA,SAAO,MAAMN,GAAG,CAACQ,8BAA8B,CAAC,CAAC,IAAIC,KAAJ,CAAU;AACzDoB,IAAAA,IAAI,EAAEtB,SAAS,CAACyB;AADyC,GAAV,CAAD,CAAD,CAA/B,CAAhB;AAGD;;AAED,eAAerB,kBAAf","sourcesContent":["import { put } from 'redux-saga/effects';\r\nimport Endpoint, { urlFactory } from '../../../../constants/Endpoint';\r\nimport postData from '../../../../utils/fetchMethod/postData';\r\nimport EndpointStatus from '../../../../constants/EndpointStatus';\r\nimport RegisterErrorCode from '../constants/RegisterErrorCode';\r\nimport postRegisterSuccessActionCreator from '../actionCreator/postRegisterSuccessActionCreator';\r\nimport ErrorCode from '../../../../constants/ErrorCode';\r\nimport postRegisterErrorActionCreator from '../actionCreator/postRegisterErrorActionCreator';\r\nimport Error from '../../../../../entities/Error';\r\nimport postLoginActionCreator from '../../login/actionCreator/postLoginActionCreator';\r\n\r\nfunction* postRegisterWorker(action) {\r\n  const {\r\n    username,\r\n    password,\r\n    email,\r\n    firstName,\r\n    lastName,\r\n  } = action?.payload || {};\r\n\r\n  const response = yield postData({\r\n    url: urlFactory(Endpoint.REGISTER),\r\n    data: {\r\n      username,\r\n      password,\r\n      firstname: firstName,\r\n      lastname: lastName,\r\n      email,\r\n      photo: 'null',\r\n    },\r\n  });\r\n\r\n  const {\r\n    data,\r\n    status,\r\n  } = response || {};\r\n\r\n  if (status === EndpointStatus.ERROR) {\r\n    return yield put(postRegisterErrorActionCreator([new Error({\r\n      message: data?.message,\r\n      code: RegisterErrorCode.WRONG_PARAMS,\r\n    })]));\r\n  }\r\n\r\n  if (status === EndpointStatus.SUCCESS) {\r\n    yield put(postLoginActionCreator(username, password));\r\n    // In order to stop fetch into register view\r\n    return yield put(postRegisterSuccessActionCreator());\r\n  }\r\n\r\n  // Generic errorCode\r\n  return yield put(postRegisterErrorActionCreator([new Error({\r\n    code: ErrorCode.DEFAULT,\r\n  })]));\r\n}\r\n\r\nexport default postRegisterWorker;\r\n"]},"metadata":{},"sourceType":"module"}