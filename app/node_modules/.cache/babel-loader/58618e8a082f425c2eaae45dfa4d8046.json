{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    const width = `${Math.round(size / styleProps.columns * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    spacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && spacing !== 0) {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = {\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\n        marginTop: `-${getOffset(themeSpacing)}`,\n        marginLeft: `-${getOffset(themeSpacing)}`,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: getOffset(themeSpacing),\n          paddingLeft: getOffset(themeSpacing)\n        }\n      };\n    }\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nconst GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.styleProps;\n    return _extends({}, styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.direction === 'column' && {\n  flexDirection: 'column',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'column-reverse' && {\n  flexDirection: 'column-reverse',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'row-reverse' && {\n  flexDirection: 'row-reverse'\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"columns\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const styleProps = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/Grid/Grid.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","unstable_composeClasses","composeClasses","requirePropFactory","experimentalStyled","useThemeProps","GridContext","gridClasses","getGridUtilityClass","jsx","_jsx","getOffset","val","parse","parseFloat","String","replace","generateGrid","globalStyles","theme","breakpoint","styleProps","size","styles","flexBasis","flexGrow","maxWidth","width","Math","round","columns","more","container","item","spacing","themeSpacing","fullWidth","breakpoints","values","Object","assign","up","generateGap","marginTop","marginLeft","paddingTop","paddingLeft","GridRoot","name","slot","overridesResolver","props","direction","lg","md","sm","wrap","xl","xs","zeroMinWidth","root","boxSizing","display","flexWrap","margin","minWidth","flexDirection","keys","reduce","useUtilityClasses","classes","slots","Grid","forwardRef","inProps","ref","themeProps","className","columnsProp","component","other","useContext","wrapChild","element","Provider","value","children","as","process","env","NODE_ENV","propTypes","node","object","string","number","elementType","bool","oneOf","oneOfType","sx","requireProp"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    const width = `${Math.round(size / styleProps.columns * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    spacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && spacing !== 0) {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = {\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\n        marginTop: `-${getOffset(themeSpacing)}`,\n        marginLeft: `-${getOffset(themeSpacing)}`,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: getOffset(themeSpacing),\n          paddingLeft: getOffset(themeSpacing)\n        }\n      };\n    }\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nconst GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.styleProps;\n    return _extends({}, styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.direction === 'column' && {\n  flexDirection: 'column',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'column-reverse' && {\n  flexDirection: 'column-reverse',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'row-reverse' && {\n  flexDirection: 'row-reverse'\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"columns\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const styleProps = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}