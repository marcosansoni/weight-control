{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport experimentalStyled, { rootShouldForwardProp } from '../styles/experimentalStyled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nconst RadioRoot = experimentalStyled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  color: theme.palette.text.secondary\n}, styleProps.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  const {\n    checked: checkedProp,\n    color = 'primary',\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    styleProps: styleProps,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/Radio/Radio.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","refType","unstable_composeClasses","composeClasses","SwitchBase","useThemeProps","RadioButtonIcon","alpha","capitalize","createChainedFunction","useRadioGroup","radioClasses","getRadioUtilityClass","experimentalStyled","rootShouldForwardProp","jsx","_jsx","useUtilityClasses","styleProps","classes","color","slots","root","RadioRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","theme","palette","text","secondary","checked","main","backgroundColor","action","hoverOpacity","disabled","defaultCheckedIcon","defaultIcon","Radio","forwardRef","inProps","ref","checkedProp","nameProp","onChange","onChangeProp","size","other","radioGroup","value","type","icon","cloneElement","fontSize","checkedIcon","process","env","NODE_ENV","propTypes","bool","node","object","oneOfType","oneOf","string","disableRipple","id","inputProps","inputRef","func","required","sx","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport experimentalStyled, { rootShouldForwardProp } from '../styles/experimentalStyled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nconst RadioRoot = experimentalStyled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  color: theme.palette.text.secondary\n}, styleProps.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  const {\n    checked: checkedProp,\n    color = 'primary',\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    styleProps: styleProps,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;"]},"metadata":{},"sourceType":"module"}