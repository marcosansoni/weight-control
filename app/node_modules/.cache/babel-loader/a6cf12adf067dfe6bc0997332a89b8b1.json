{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration, easing } from '../styles/createTransitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so it can't be seen on the screen.\n// Later, we're going to translate the node back to its original location with `none`.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${containerWindow.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${containerWindow.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultEasing = {\n  enter: easing.easeOut,\n  exit: easing.sharp\n};\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    appear = true,\n    children,\n    direction = 'down',\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"appear\", \"children\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: appear,\n    in: inProp,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: easing.easeOut,\n   *   exit: easing.sharp,\n   * }\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/Slide/Slide.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Transition","elementAcceptingRef","debounce","useForkRef","useTheme","duration","easing","reflow","getTransitionProps","ownerWindow","jsx","_jsx","getTranslateValue","direction","node","rect","getBoundingClientRect","containerWindow","transform","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","left","width","innerHeight","top","height","setTranslateValue","style","webkitTransform","defaultEasing","enter","easeOut","exit","sharp","defaultTimeout","enteringScreen","leavingScreen","Slide","forwardRef","props","ref","appear","children","easingProp","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","other","theme","childrenRef","useRef","handleRefIntermediary","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","current","handleEnter","handleEntering","transitionProps","mode","webkitTransition","transitions","create","transition","handleEntered","handleExiting","handleExit","handleExited","updatePosition","useCallback","useEffect","handleResize","addEventListener","clear","removeEventListener","nodeRef","state","childProps","cloneElement","visibility","process","env","NODE_ENV","propTypes","bool","oneOf","oneOfType","shape","string","func","object","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration, easing } from '../styles/createTransitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so it can't be seen on the screen.\n// Later, we're going to translate the node back to its original location with `none`.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${containerWindow.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${containerWindow.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultEasing = {\n  enter: easing.easeOut,\n  exit: easing.sharp\n};\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    appear = true,\n    children,\n    direction = 'down',\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"appear\", \"children\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: appear,\n    in: inProp,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: easing.easeOut,\n   *   exit: easing.sharp,\n   * }\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;"]},"metadata":{},"sourceType":"module"}