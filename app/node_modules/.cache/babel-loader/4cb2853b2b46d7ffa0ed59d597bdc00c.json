{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport i18n from 'i18next';\nimport Endpoint, { urlFactory } from '../../../constants/Endpoint';\nimport EndpointStatus from '../../../constants/EndpointStatus';\nimport LoginErrorCode from '../constants/LoginErrorCode';\nimport ErrorCode from '../../../constants/ErrorCode';\nimport Error from '../../../../entities/Error';\nimport postData from '../../../utils/fetchMethod/postData';\nimport postWeightErrorActionCreator from '../actionCreator/postWeightErrorActionCreator';\nimport getWeightSubWorker from './subworker/getWeightSubWorker';\nimport postWeightSuccessActionCreator from '../actionCreator/postWeightSuccessActionCreator';\nimport Notification from '../../../../entities/Notification';\n\nfunction* postWeightWorker(action) {\n  const {\n    date,\n    weight,\n    note\n  } = action.payload || {};\n  const response = yield postData({\n    url: urlFactory(Endpoint.WEIGHT),\n    data: {\n      date,\n      weight: `${weight}`,\n      ...(note && {\n        note\n      })\n    }\n  });\n  const {\n    data,\n    status\n  } = response || {};\n\n  if (status === EndpointStatus.NOT_FOUND) {\n    return yield put(postWeightErrorActionCreator([new Notification({\n      message: 'Weights not found',\n      code: LoginErrorCode.NOT_FOUND\n    })]));\n  }\n\n  if (status === EndpointStatus.BAD_REQUEST) {\n    var _data$errors;\n\n    return yield put(postWeightErrorActionCreator([new Notification({\n      message: (_data$errors = data.errors) === null || _data$errors === void 0 ? void 0 : _data$errors[0],\n      code: LoginErrorCode.NOT_FOUND\n    })]));\n  }\n\n  if (status === EndpointStatus.SUCCESS) {\n    const {\n      errors,\n      result\n    } = yield getWeightSubWorker();\n\n    if (errors) {\n      return yield put(postWeightErrorActionCreator(errors));\n    }\n\n    const notifications = [new Notification({\n      message: i18n.t('home.snackbar.postSuccess')\n    })];\n    return yield put(postWeightSuccessActionCreator(result === null || result === void 0 ? void 0 : result.weightById, notifications));\n  } // Generic errorCode\n\n\n  return yield put(postWeightErrorActionCreator([new Error({\n    code: ErrorCode.DEFAULT\n  })]));\n}\n\nexport default postWeightWorker;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/store/state/home/worker/postWeightWorker.js"],"names":["put","i18n","Endpoint","urlFactory","EndpointStatus","LoginErrorCode","ErrorCode","Error","postData","postWeightErrorActionCreator","getWeightSubWorker","postWeightSuccessActionCreator","Notification","postWeightWorker","action","date","weight","note","payload","response","url","WEIGHT","data","status","NOT_FOUND","message","code","BAD_REQUEST","errors","SUCCESS","result","notifications","t","weightById","DEFAULT"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,6BAArC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,4BAAP,MAAyC,+CAAzC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,8BAAP,MAA2C,iDAA3C;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;AAEA,UAAUC,gBAAV,CAA2BC,MAA3B,EAAmC;AACjC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFH,MAAM,CAACI,OAAP,IAAkB,EAJtB;AAMA,QAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAAC;AAC9BY,IAAAA,GAAG,EAAEjB,UAAU,CAACD,QAAQ,CAACmB,MAAV,CADe;AAE9BC,IAAAA,IAAI,EAAE;AACJP,MAAAA,IADI;AAEJC,MAAAA,MAAM,EAAG,GAAEA,MAAO,EAFd;AAGJ,UAAIC,IAAI,IAAI;AAAEA,QAAAA;AAAF,OAAZ;AAHI;AAFwB,GAAD,CAA/B;AASA,QAAM;AACJK,IAAAA,IADI;AAEJC,IAAAA;AAFI,MAGFJ,QAAQ,IAAI,EAHhB;;AAKA,MAAII,MAAM,KAAKnB,cAAc,CAACoB,SAA9B,EAAyC;AACvC,WAAO,MAAMxB,GAAG,CAACS,4BAA4B,CAAC,CAAC,IAAIG,YAAJ,CAAiB;AAC9Da,MAAAA,OAAO,EAAE,mBADqD;AAE9DC,MAAAA,IAAI,EAAErB,cAAc,CAACmB;AAFyC,KAAjB,CAAD,CAAD,CAA7B,CAAhB;AAID;;AAED,MAAID,MAAM,KAAKnB,cAAc,CAACuB,WAA9B,EAA2C;AAAA;;AACzC,WAAO,MAAM3B,GAAG,CAACS,4BAA4B,CAAC,CAAC,IAAIG,YAAJ,CAAiB;AAC9Da,MAAAA,OAAO,kBAAEH,IAAI,CAACM,MAAP,iDAAE,aAAc,CAAd,CADqD;AAE9DF,MAAAA,IAAI,EAAErB,cAAc,CAACmB;AAFyC,KAAjB,CAAD,CAAD,CAA7B,CAAhB;AAID;;AAED,MAAID,MAAM,KAAKnB,cAAc,CAACyB,OAA9B,EAAuC;AACrC,UAAM;AACJD,MAAAA,MADI;AAEJE,MAAAA;AAFI,QAGF,MAAMpB,kBAAkB,EAH5B;;AAIA,QAAIkB,MAAJ,EAAY;AACV,aAAO,MAAM5B,GAAG,CAACS,4BAA4B,CAACmB,MAAD,CAA7B,CAAhB;AACD;;AACD,UAAMG,aAAa,GAAG,CAAC,IAAInB,YAAJ,CAAiB;AAAEa,MAAAA,OAAO,EAAExB,IAAI,CAAC+B,CAAL,CAAO,2BAAP;AAAX,KAAjB,CAAD,CAAtB;AAEA,WAAO,MAAMhC,GAAG,CAACW,8BAA8B,CAACmB,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEG,UAAT,EAAqBF,aAArB,CAA/B,CAAhB;AACD,GA9CgC,CAgDjC;;;AACA,SAAO,MAAM/B,GAAG,CAACS,4BAA4B,CAAC,CAAC,IAAIF,KAAJ,CAAU;AACvDmB,IAAAA,IAAI,EAAEpB,SAAS,CAAC4B;AADuC,GAAV,CAAD,CAAD,CAA7B,CAAhB;AAGD;;AAED,eAAerB,gBAAf","sourcesContent":["import { put } from 'redux-saga/effects';\r\nimport i18n from 'i18next';\r\nimport Endpoint, { urlFactory } from '../../../constants/Endpoint';\r\nimport EndpointStatus from '../../../constants/EndpointStatus';\r\nimport LoginErrorCode from '../constants/LoginErrorCode';\r\nimport ErrorCode from '../../../constants/ErrorCode';\r\nimport Error from '../../../../entities/Error';\r\nimport postData from '../../../utils/fetchMethod/postData';\r\nimport postWeightErrorActionCreator from '../actionCreator/postWeightErrorActionCreator';\r\nimport getWeightSubWorker from './subworker/getWeightSubWorker';\r\nimport postWeightSuccessActionCreator from '../actionCreator/postWeightSuccessActionCreator';\r\nimport Notification from '../../../../entities/Notification';\r\n\r\nfunction* postWeightWorker(action) {\r\n  const {\r\n    date,\r\n    weight,\r\n    note,\r\n  } = action.payload || {};\r\n\r\n  const response = yield postData({\r\n    url: urlFactory(Endpoint.WEIGHT),\r\n    data: {\r\n      date,\r\n      weight: `${weight}`,\r\n      ...(note && { note }),\r\n    },\r\n  });\r\n\r\n  const {\r\n    data,\r\n    status,\r\n  } = response || {};\r\n\r\n  if (status === EndpointStatus.NOT_FOUND) {\r\n    return yield put(postWeightErrorActionCreator([new Notification({\r\n      message: 'Weights not found',\r\n      code: LoginErrorCode.NOT_FOUND,\r\n    })]));\r\n  }\r\n\r\n  if (status === EndpointStatus.BAD_REQUEST) {\r\n    return yield put(postWeightErrorActionCreator([new Notification({\r\n      message: data.errors?.[0],\r\n      code: LoginErrorCode.NOT_FOUND,\r\n    })]));\r\n  }\r\n\r\n  if (status === EndpointStatus.SUCCESS) {\r\n    const {\r\n      errors,\r\n      result,\r\n    } = yield getWeightSubWorker();\r\n    if (errors) {\r\n      return yield put(postWeightErrorActionCreator(errors));\r\n    }\r\n    const notifications = [new Notification({ message: i18n.t('home.snackbar.postSuccess') })];\r\n\r\n    return yield put(postWeightSuccessActionCreator(result?.weightById, notifications));\r\n  }\r\n\r\n  // Generic errorCode\r\n  return yield put(postWeightErrorActionCreator([new Error({\r\n    code: ErrorCode.DEFAULT,\r\n  })]));\r\n}\r\n\r\nexport default postWeightWorker;\r\n"]},"metadata":{},"sourceType":"module"}