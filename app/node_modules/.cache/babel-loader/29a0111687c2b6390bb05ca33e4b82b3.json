{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = experimentalStyled(SwitchBase, {}, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"edge\", \"size\", \"sx\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    styleProps: styleProps,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      styleProps: styleProps\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      styleProps: styleProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/Switch/Switch.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","alpha","darken","lighten","capitalize","SwitchBase","useThemeProps","experimentalStyled","switchClasses","getSwitchUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","edge","size","color","checked","disabled","slots","root","switchBase","thumb","track","input","composedClasses","SwitchRoot","name","slot","overridesResolver","props","styles","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","transform","SwitchSwitchBase","theme","top","left","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","opacity","main","backgroundColor","action","hoverOpacity","SwitchTrack","borderRadius","black","SwitchThumb","boxShadow","shadows","Switch","forwardRef","inProps","ref","className","sx","other","icon","children","type","checkedIcon","process","env","NODE_ENV","propTypes","bool","node","object","string","oneOfType","oneOf","defaultChecked","disableRipple","id","inputProps","inputRef","onChange","func","required","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = experimentalStyled(SwitchBase, {}, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"edge\", \"size\", \"sx\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    styleProps: styleProps,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      styleProps: styleProps\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      styleProps: styleProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"]},"metadata":{},"sourceType":"module"}