{"ast":null,"code":"var _jsxFileName = \"C:\\\\Progetti\\\\weight-control\\\\app\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport * as Yup from 'yup';\nimport { Slide, Snackbar, TextField } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoadingButton from '@material-ui/lab/LoadingButton';\nimport MediaQuerySelector from '../constants/responsive/MediaQuerySelector';\nimport { Color } from '../theme/ColorSchema';\nimport { useLoginError } from '../store/state/authentication/login/selectors/loginErrorSelector';\nimport { useFetchType } from '../store/state/common/selectors/fetchSelector';\nimport postLoginActionCreator, { POST_LOGIN } from '../store/state/authentication/login/actionCreator/postLoginActionCreator';\nimport postLoginErrorActionCreator from '../store/state/authentication/login/actionCreator/postLoginErrorActionCreator';\nimport Routes from '../route/Routes';\nimport { useSession } from '../store/state/common/selectors/sessionSelector';\nimport logo from \"../assets/images/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100% - 128px);\n  margin: 64px;\n  box-shadow: 0 0.25em 0.625em rgba(0,0,0,.15);\n  border-radius: 8px;\n  padding: 64px;\n  display: flex;\n  background-color: ${p => p.theme[Color.BACKGROUND]};\n\n  ${MediaQuerySelector.MEDIUM} {\n    padding: 48px;\n    width: auto;\n    min-width: 480px;\n    height: auto;\n    flex-direction: column;\n  }\n\n  ${MediaQuerySelector.SMALL} {\n    width: 100%;\n    border-radius: 0;\n    box-shadow: none;\n    padding: 24px 24px 64px;\n    flex-direction: column;\n    height: 100%;\n    margin: 0;\n    justify-content: center;\n  }\n`;\n_c = Container;\nconst Left = styled.div`\n  width: 60%;\n  margin-right: 5%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  ${MediaQuerySelector.LARGE} {\n    width: 55%;\n    margin-right: 5%;\n  }\n\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\n    width: 100%;\n    margin-right: 0;\n    height: auto;\n  }\n`;\n_c2 = Left;\nconst Right = styled.div`\n  width: 35%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  ${MediaQuerySelector.LARGE} {\n    width: 40%;\n  }\n\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\n    width: 100%;\n    height: auto;\n  }\n`;\n_c3 = Right;\nconst Page = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${p => p.theme[Color.PRIMARY_DARK]};\n`;\n_c4 = Page;\nconst ContainerImage = styled.div`\n  //max-height: 35%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c5 = ContainerImage;\nconst Image = styled.img`\n  height: 128px;\n  \n  ${MediaQuerySelector.LARGE} {\n    height: 96px;\n  }\n\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\n    height: 96px;\n  }\n`;\n_c6 = Image;\nconst Title = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  color: ${p => p.theme[Color.PRIMARY_DARK]};\n  font-size: 48px;\n  margin-bottom: 24px;\n  margin-top: 24px;\n  font-weight: 700;\n  text-transform: capitalize;\n  text-align: center;\n\n  ${MediaQuerySelector.LARGE} {\n    font-size: 42px;\n  }\n\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\n    font-size: 32px;\n    padding-bottom: 16px;\n  }\n`;\n_c7 = Title;\nconst TitleForm = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  color: ${p => p.theme[Color.PRIMARY_DARK]};\n  font-size: 28px;\n  margin-bottom: 24px;\n  font-weight: 550;\n  text-transform: uppercase;\n\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\n    display: none;\n  }\n`;\n_c8 = TitleForm;\nconst ContainerInput = styled.div`\n  height: 92px\n`;\n_c9 = ContainerInput;\nconst Description = styled.div`\n  margin-top: 8px;\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  font-size: 14px;\n  color: ${p => p.theme[Color.SUBTITLE]};\n  cursor: pointer;\n  text-decoration: unset;\n\n  :hover {\n    color: ${p => p.theme[Color.TEXT_LIGHT]};\n  }\n`;\n_c10 = Description;\nconst initialValues = {\n  email: '',\n  password: ''\n};\n\nconst validationSchema = t => Yup.object({\n  email: Yup.string(t('login.errors.email.default')).email(t('login.errors.email.valid')).required(t('login.errors.email.required')),\n  password: Yup.string(t('login.errors.password.default')).required(t('login.errors.password.required'))\n});\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loginError = useLoginError();\n  const fetching = useFetchType(POST_LOGIN);\n  const session = useSession();\n  const history = useHistory();\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const validationSchemaFormik = useMemo(() => validationSchema(t), []);\n  useEffect(() => {\n    if (loginError === null || loginError === void 0 ? void 0 : loginError.length) {\n      var _loginError$;\n\n      setSnackbarOpen(true);\n      setSnackbarMessage((_loginError$ = loginError[0]) === null || _loginError$ === void 0 ? void 0 : _loginError$.message);\n    }\n  }, [loginError]); // Clean errors associated at login when unmount\n\n  useEffect(() => () => {\n    if (loginError.length) dispatch(postLoginErrorActionCreator([]));\n  }, []); // Redirect after successful login\n\n  useEffect(() => {\n    if (session.isValid) history.push(Routes.HOME);\n  }, [session]);\n\n  const handleSubmit = formik => {\n    const {\n      email,\n      password\n    } = formik;\n    dispatch(postLoginActionCreator(email, password));\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n    dispatch(postLoginErrorActionCreator([]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchemaFormik,\n    onSubmit: handleSubmit,\n    children: formik => /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: snackbarOpen,\n        onClose: () => handleSnackbarClose(),\n        TransitionComponent: p => /*#__PURE__*/_jsxDEV(Slide, { ...p,\n          direction: \"up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 42\n        }, this),\n        message: snackbarMessage,\n        autoHideDuration: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Left, {\n          children: [/*#__PURE__*/_jsxDEV(ContainerImage, {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: logo,\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            children: t('common.brand')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          children: [/*#__PURE__*/_jsxDEV(TitleForm, {\n            children: t('login.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: fetching,\n              fullWidth: true,\n              label: t('login.placeholder.email'),\n              name: \"email\",\n              variant: \"outlined\",\n              value: formik.values.username,\n              onChange: formik.handleChange,\n              onBlur: () => formik.setFieldTouched('email'),\n              error: formik.touched.email && Boolean(formik.errors.email),\n              helperText: formik.touched.email && formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: fetching,\n              fullWidth: true,\n              type: \"password\",\n              label: t('login.placeholder.password'),\n              name: \"password\",\n              variant: \"outlined\",\n              value: formik.values.password,\n              onChange: formik.handleChange,\n              onBlur: () => formik.setFieldTouched('password'),\n              error: formik.touched.password && Boolean(formik.errors.password),\n              helperText: formik.touched.password && formik.errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            pending: fetching,\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: formik.handleSubmit,\n            children: t('login.primary')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: 'unset'\n            },\n            to: Routes.AUTHENTICATION.REGISTER,\n            children: /*#__PURE__*/_jsxDEV(Description, {\n              children: t('login.notYetUser')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"bA0zHNproJ8Jpt0pu4kDpU63iZY=\", false, function () {\n  return [useDispatch, useLoginError, useFetchType, useSession, useHistory, useTranslation];\n});\n\n_c11 = Login;\nexport default Login;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Left\");\n$RefreshReg$(_c3, \"Right\");\n$RefreshReg$(_c4, \"Page\");\n$RefreshReg$(_c5, \"ContainerImage\");\n$RefreshReg$(_c6, \"Image\");\n$RefreshReg$(_c7, \"Title\");\n$RefreshReg$(_c8, \"TitleForm\");\n$RefreshReg$(_c9, \"ContainerInput\");\n$RefreshReg$(_c10, \"Description\");\n$RefreshReg$(_c11, \"Login\");","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/pages/Login.js"],"names":["React","useEffect","useMemo","useState","Yup","Slide","Snackbar","TextField","Formik","styled","useTranslation","Link","useHistory","useDispatch","LoadingButton","MediaQuerySelector","Color","useLoginError","useFetchType","postLoginActionCreator","POST_LOGIN","postLoginErrorActionCreator","Routes","useSession","Container","div","p","theme","BACKGROUND","MEDIUM","SMALL","Left","LARGE","MEDIUM_AND_SMALL","Right","Page","PRIMARY_DARK","ContainerImage","Image","img","Title","TitleForm","ContainerInput","Description","SUBTITLE","TEXT_LIGHT","initialValues","email","password","validationSchema","t","object","string","required","Login","dispatch","loginError","fetching","session","history","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","validationSchemaFormik","length","message","isValid","push","HOME","handleSubmit","formik","handleSnackbarClose","vertical","horizontal","logo","values","username","handleChange","setFieldTouched","touched","Boolean","errors","textDecoration","AUTHENTICATION","REGISTER"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Slide, Snackbar, TextField } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport MediaQuerySelector from '../constants/responsive/MediaQuerySelector';\r\nimport { Color } from '../theme/ColorSchema';\r\nimport { useLoginError } from '../store/state/authentication/login/selectors/loginErrorSelector';\r\nimport { useFetchType } from '../store/state/common/selectors/fetchSelector';\r\nimport postLoginActionCreator, { POST_LOGIN } from '../store/state/authentication/login/actionCreator/postLoginActionCreator';\r\nimport postLoginErrorActionCreator\r\n  from '../store/state/authentication/login/actionCreator/postLoginErrorActionCreator';\r\nimport Routes from '../route/Routes';\r\nimport { useSession } from '../store/state/common/selectors/sessionSelector';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 128px);\r\n  margin: 64px;\r\n  box-shadow: 0 0.25em 0.625em rgba(0,0,0,.15);\r\n  border-radius: 8px;\r\n  padding: 64px;\r\n  display: flex;\r\n  background-color: ${(p) => p.theme[Color.BACKGROUND]};\r\n\r\n  ${MediaQuerySelector.MEDIUM} {\r\n    padding: 48px;\r\n    width: auto;\r\n    min-width: 480px;\r\n    height: auto;\r\n    flex-direction: column;\r\n  }\r\n\r\n  ${MediaQuerySelector.SMALL} {\r\n    width: 100%;\r\n    border-radius: 0;\r\n    box-shadow: none;\r\n    padding: 24px 24px 64px;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    margin: 0;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  width: 60%;\r\n  margin-right: 5%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  ${MediaQuerySelector.LARGE} {\r\n    width: 55%;\r\n    margin-right: 5%;\r\n  }\r\n\r\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\r\n    width: 100%;\r\n    margin-right: 0;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  width: 35%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  ${MediaQuerySelector.LARGE} {\r\n    width: 40%;\r\n  }\r\n\r\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst Page = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${(p) => p.theme[Color.PRIMARY_DARK]};\r\n`;\r\n\r\nconst ContainerImage = styled.div`\r\n  //max-height: 35%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  height: 128px;\r\n  \r\n  ${MediaQuerySelector.LARGE} {\r\n    height: 96px;\r\n  }\r\n\r\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\r\n    height: 96px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: ${(p) => p.theme[Color.PRIMARY_DARK]};\r\n  font-size: 48px;\r\n  margin-bottom: 24px;\r\n  margin-top: 24px;\r\n  font-weight: 700;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n\r\n  ${MediaQuerySelector.LARGE} {\r\n    font-size: 42px;\r\n  }\r\n\r\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\r\n    font-size: 32px;\r\n    padding-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst TitleForm = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: ${(p) => p.theme[Color.PRIMARY_DARK]};\r\n  font-size: 28px;\r\n  margin-bottom: 24px;\r\n  font-weight: 550;\r\n  text-transform: uppercase;\r\n\r\n  ${MediaQuerySelector.MEDIUM_AND_SMALL} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ContainerInput = styled.div`\r\n  height: 92px\r\n`;\r\n\r\nconst Description = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  color: ${(p) => p.theme[Color.SUBTITLE]};\r\n  cursor: pointer;\r\n  text-decoration: unset;\r\n\r\n  :hover {\r\n    color: ${(p) => p.theme[Color.TEXT_LIGHT]};\r\n  }\r\n`;\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst validationSchema = (t) => Yup.object({\r\n  email: Yup.string(t('login.errors.email.default'))\r\n    .email(t('login.errors.email.valid'))\r\n    .required(t('login.errors.email.required')),\r\n  password: Yup.string(t('login.errors.password.default')).required(t('login.errors.password.required')),\r\n});\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const loginError = useLoginError();\r\n  const fetching = useFetchType(POST_LOGIN);\r\n  const session = useSession();\r\n  const history = useHistory();\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(false);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const validationSchemaFormik = useMemo(() => validationSchema(t), []);\r\n\r\n  useEffect(() => {\r\n    if (loginError?.length) {\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(loginError[0]?.message);\r\n    }\r\n  }, [loginError]);\r\n\r\n  // Clean errors associated at login when unmount\r\n  useEffect(() => () => {\r\n    if (loginError.length) dispatch(postLoginErrorActionCreator([]));\r\n  }, []);\r\n\r\n  // Redirect after successful login\r\n  useEffect(() => {\r\n    if (session.isValid) history.push(Routes.HOME);\r\n  }, [session]);\r\n\r\n  const handleSubmit = (formik) => {\r\n    const { email, password } = formik;\r\n    dispatch(postLoginActionCreator(email, password));\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n    dispatch(postLoginErrorActionCreator([]));\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchemaFormik}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {(formik) => (\r\n        <Page>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n            open={snackbarOpen}\r\n            onClose={() => handleSnackbarClose()}\r\n            TransitionComponent={(p) => (<Slide {...p} direction=\"up\" />)}\r\n            message={snackbarMessage}\r\n            autoHideDuration={3000}\r\n          />\r\n          <Container>\r\n            <Left>\r\n              <ContainerImage>\r\n                <Image src={logo} alt=\"Logo\" />\r\n              </ContainerImage>\r\n              <Title>{t('common.brand')}</Title>\r\n            </Left>\r\n            <Right>\r\n              <TitleForm>{t('login.title')}</TitleForm>\r\n              <ContainerInput>\r\n                <TextField\r\n                  disabled={fetching}\r\n                  fullWidth\r\n                  label={t('login.placeholder.email')}\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.username}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={() => formik.setFieldTouched('email')}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n              </ContainerInput>\r\n              <ContainerInput>\r\n                <TextField\r\n                  disabled={fetching}\r\n                  fullWidth\r\n                  type=\"password\"\r\n                  label={t('login.placeholder.password')}\r\n                  name=\"password\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={() => formik.setFieldTouched('password')}\r\n                  error={formik.touched.password && Boolean(formik.errors.password)}\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n              </ContainerInput>\r\n              <LoadingButton\r\n                pending={fetching}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={formik.handleSubmit}\r\n              >\r\n                {t('login.primary')}\r\n              </LoadingButton>\r\n              <Link style={{ textDecoration: 'unset' }} to={Routes.AUTHENTICATION.REGISTER}>\r\n                <Description>{t('login.notYetUser')}</Description>\r\n              </Link>\r\n            </Right>\r\n          </Container>\r\n        </Page>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}