{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = styleProps;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  styleProps\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends({\n    /* Styles applied to the root element. */\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n\n    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    }\n  }, !styleProps.disableGutters && {\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      minHeight: 64\n    }\n  });\n});\nconst AccordionSummaryContent = experimentalStyled('div', {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the children wrapper element. */\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0'\n}, !styleProps.disableGutters && {\n  transition: theme.transitions.create(['margin'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    margin: '20px 0'\n  }\n}));\nconst AccordionSummaryExpandIconWrapper = experimentalStyled('div', {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  /* Styles applied to the `expandIcon`'s wrapper element. */\n  display: 'flex',\n  color: theme.palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n\n  /* Styles applied to the `expandIcon`'s wrapper element if `expanded={true}`. */\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"]);\n\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      styleProps: styleProps,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default AccordionSummary;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/AccordionSummary/AccordionSummary.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","ButtonBase","AccordionContext","accordionSummaryClasses","getAccordionSummaryUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","expanded","disabled","disableGutters","slots","root","focusVisible","content","expandIconWrapper","AccordionSummaryRoot","name","slot","overridesResolver","props","styles","theme","transition","duration","transitions","shortest","display","minHeight","padding","spacing","create","backgroundColor","palette","action","focus","opacity","disabledOpacity","cursor","AccordionSummaryContent","flexGrow","margin","AccordionSummaryExpandIconWrapper","color","active","transform","AccordionSummary","forwardRef","inProps","ref","children","className","expandIcon","focusVisibleClassName","onClick","other","toggle","useContext","handleChange","event","focusRipple","disableRipple","component","process","env","NODE_ENV","propTypes","node","object","string","func","sx"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,uBAA1D;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,uBAAP,IAAkCC,+BAAlC,QAAyE,2BAAzE;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA;AAJI,MAKFJ,UALJ;AAMA,QAAMK,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASJ,QAAQ,IAAI,UAArB,EAAiCC,QAAQ,IAAI,UAA7C,EAAyD,CAACC,cAAD,IAAmB,SAA5E,CADM;AAEZG,IAAAA,YAAY,EAAE,CAAC,cAAD,CAFF;AAGZC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAYN,QAAQ,IAAI,UAAxB,EAAoC,CAACE,cAAD,IAAmB,gBAAvD,CAHG;AAIZK,IAAAA,iBAAiB,EAAE,CAAC,mBAAD,EAAsBP,QAAQ,IAAI,UAAlC;AAJP,GAAd;AAMA,SAAOd,cAAc,CAACiB,KAAD,EAAQX,+BAAR,EAAyCO,OAAzC,CAArB;AACD,CAdD;;AAgBA,MAAMS,oBAAoB,GAAGrB,kBAAkB,CAACE,UAAD,EAAa,EAAb,EAAiB;AAC9DoB,EAAAA,IAAI,EAAE,qBADwD;AAE9DC,EAAAA,IAAI,EAAE,MAFwD;AAG9DC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACT;AAHiB,CAAjB,CAAlB,CAI1B,CAAC;AACFU,EAAAA,KADE;AAEFhB,EAAAA;AAFE,CAAD,KAGG;AACJ,QAAMiB,UAAU,GAAG;AACjBC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,WAAN,CAAkBD,QAAlB,CAA2BE;AADpB,GAAnB;AAGA,SAAOrC,QAAQ,CAAC;AACd;AACAsC,IAAAA,OAAO,EAAE,MAFK;AAGdC,IAAAA,SAAS,EAAE,EAHG;AAIdC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJK;AAKdP,IAAAA,UAAU,EAAED,KAAK,CAACG,WAAN,CAAkBM,MAAlB,CAAyB,CAAC,YAAD,EAAe,kBAAf,CAAzB,EAA6DR,UAA7D,CALE;;AAOd;AACA,KAAE,KAAIxB,uBAAuB,CAACc,YAAa,EAA3C,GAA+C;AAC7CmB,MAAAA,eAAe,EAAEV,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqBC;AADO,KARjC;;AAYd;AACA,KAAE,KAAIpC,uBAAuB,CAACU,QAAS,EAAvC,GAA2C;AACzC2B,MAAAA,OAAO,EAAEd,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqBG;AADW,KAb7B;AAgBd,KAAE,gBAAetC,uBAAuB,CAACU,QAAS,GAAlD,GAAuD;AACrD6B,MAAAA,MAAM,EAAE;AAD6C;AAhBzC,GAAD,EAmBZ,CAAChC,UAAU,CAACI,cAAZ,IAA8B;AAC/B,KAAE,KAAIX,uBAAuB,CAACS,QAAS,EAAvC,GAA2C;AACzCoB,MAAAA,SAAS,EAAE;AAD8B;AADZ,GAnBlB,CAAf;AAwBD,CAnC4B,CAA7B;AAoCA,MAAMW,uBAAuB,GAAG5C,kBAAkB,CAAC,KAAD,EAAQ,EAAR,EAAY;AAC5DsB,EAAAA,IAAI,EAAE,qBADsD;AAE5DC,EAAAA,IAAI,EAAE,SAFsD;AAG5DC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACP;AAHe,CAAZ,CAAlB,CAI7B,CAAC;AACFQ,EAAAA,KADE;AAEFhB,EAAAA;AAFE,CAAD,KAGGjB,QAAQ,CAAC;AACb;AACAsC,EAAAA,OAAO,EAAE,MAFI;AAGba,EAAAA,QAAQ,EAAE,CAHG;AAIbC,EAAAA,MAAM,EAAE;AAJK,CAAD,EAKX,CAACnC,UAAU,CAACI,cAAZ,IAA8B;AAC/Ba,EAAAA,UAAU,EAAED,KAAK,CAACG,WAAN,CAAkBM,MAAlB,CAAyB,CAAC,QAAD,CAAzB,EAAqC;AAC/CP,IAAAA,QAAQ,EAAEF,KAAK,CAACG,WAAN,CAAkBD,QAAlB,CAA2BE;AADU,GAArC,CADmB;AAI/B,GAAE,KAAI3B,uBAAuB,CAACS,QAAS,EAAvC,GAA2C;AACzCiC,IAAAA,MAAM,EAAE;AADiC;AAJZ,CALnB,CAPkB,CAAhC;AAoBA,MAAMC,iCAAiC,GAAG/C,kBAAkB,CAAC,KAAD,EAAQ,EAAR,EAAY;AACtEsB,EAAAA,IAAI,EAAE,qBADgE;AAEtEC,EAAAA,IAAI,EAAE,mBAFgE;AAGtEC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACN;AAHyB,CAAZ,CAAlB,CAIvC,CAAC;AACFO,EAAAA;AADE,CAAD,MAEI;AACL;AACAK,EAAAA,OAAO,EAAE,MAFJ;AAGLgB,EAAAA,KAAK,EAAErB,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqBU,MAHvB;AAILC,EAAAA,SAAS,EAAE,cAJN;AAKLtB,EAAAA,UAAU,EAAED,KAAK,CAACG,WAAN,CAAkBM,MAAlB,CAAyB,WAAzB,EAAsC;AAChDP,IAAAA,QAAQ,EAAEF,KAAK,CAACG,WAAN,CAAkBD,QAAlB,CAA2BE;AADW,GAAtC,CALP;;AASL;AACA,GAAE,KAAI3B,uBAAuB,CAACS,QAAS,EAAvC,GAA2C;AACzCqC,IAAAA,SAAS,EAAE;AAD8B;AAVtC,CAFJ,CAJuC,CAA1C;AAoBA,MAAMC,gBAAgB,GAAG,aAAaxD,KAAK,CAACyD,UAAN,CAAiB,SAASD,gBAAT,CAA0BE,OAA1B,EAAmCC,GAAnC,EAAwC;AAC7F,QAAM7B,KAAK,GAAGxB,aAAa,CAAC;AAC1BwB,IAAAA,KAAK,EAAE4B,OADmB;AAE1B/B,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAKA,QAAM;AACJiC,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,qBAJI;AAKJC,IAAAA;AALI,MAMFlC,KANJ;AAAA,QAOMmC,KAAK,GAAGnE,6BAA6B,CAACgC,KAAD,EAAQ,CAAC,UAAD,EAAa,WAAb,EAA0B,YAA1B,EAAwC,uBAAxC,EAAiE,SAAjE,CAAR,CAP3C;;AASA,QAAM;AACJX,IAAAA,QAAQ,GAAG,KADP;AAEJC,IAAAA,cAFI;AAGJF,IAAAA,QAHI;AAIJgD,IAAAA;AAJI,MAKFlE,KAAK,CAACmE,UAAN,CAAiB3D,gBAAjB,CALJ;;AAOA,QAAM4D,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAIH,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,KAAD,CAAN;AACD;;AAED,QAAIL,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACK,KAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMrD,UAAU,GAAGjB,QAAQ,CAAC,EAAD,EAAK+B,KAAL,EAAY;AACrCZ,IAAAA,QADqC;AAErCC,IAAAA,QAFqC;AAGrCC,IAAAA;AAHqC,GAAZ,CAA3B;;AAMA,QAAMH,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;AACA,SAAO,aAAaF,KAAK,CAACY,oBAAD,EAAuB3B,QAAQ,CAAC;AACvDuE,IAAAA,WAAW,EAAE,KAD0C;AAEvDC,IAAAA,aAAa,EAAE,IAFwC;AAGvDpD,IAAAA,QAAQ,EAAEA,QAH6C;AAIvDqD,IAAAA,SAAS,EAAE,KAJ4C;AAKvD,qBAAiBtD,QALsC;AAMvD2C,IAAAA,SAAS,EAAE3D,IAAI,CAACe,OAAO,CAACK,IAAT,EAAeuC,SAAf,CANwC;AAOvDE,IAAAA,qBAAqB,EAAE7D,IAAI,CAACe,OAAO,CAACM,YAAT,EAAuBwC,qBAAvB,CAP4B;AAQvDC,IAAAA,OAAO,EAAEI,YAR8C;AASvDT,IAAAA,GAAG,EAAEA,GATkD;AAUvD3C,IAAAA,UAAU,EAAEA;AAV2C,GAAD,EAWrDiD,KAXqD,EAW9C;AACRL,IAAAA,QAAQ,EAAE,CAAC,aAAahD,IAAI,CAACqC,uBAAD,EAA0B;AACpDY,MAAAA,SAAS,EAAE5C,OAAO,CAACO,OADiC;AAEpDR,MAAAA,UAAU,EAAEA,UAFwC;AAGpD4C,MAAAA,QAAQ,EAAEA;AAH0C,KAA1B,CAAlB,EAINE,UAAU,IAAI,aAAalD,IAAI,CAACwC,iCAAD,EAAoC;AACrES,MAAAA,SAAS,EAAE5C,OAAO,CAACQ,iBADkD;AAErET,MAAAA,UAAU,EAAEA,UAFyD;AAGrE4C,MAAAA,QAAQ,EAAEE;AAH2D,KAApC,CAJzB;AADF,GAX8C,CAA/B,CAAzB;AAsBD,CA7DqC,CAAtC;AA8DAW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,gBAAgB,CAACoB;AACzD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEhB,EAAAA,QAAQ,EAAE3D,SAAS,CAAC4E,IATpB;;AAWA;AACF;AACA;AACE5D,EAAAA,OAAO,EAAEhB,SAAS,CAAC6E,MAdnB;;AAgBA;AACF;AACA;AACEjB,EAAAA,SAAS,EAAE5D,SAAS,CAAC8E,MAnBrB;;AAqBA;AACF;AACA;AACEjB,EAAAA,UAAU,EAAE7D,SAAS,CAAC4E,IAxBtB;;AA0BA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEd,EAAAA,qBAAqB,EAAE9D,SAAS,CAAC8E,MAlCjC;;AAoCA;AACF;AACA;AACEf,EAAAA,OAAO,EAAE/D,SAAS,CAAC+E,IAvCnB;;AAyCA;AACF;AACA;AACEC,EAAAA,EAAE,EAAEhF,SAAS,CAAC6E;AA5Cd,CAFF,GA+CI,KAAK,CA/CT;AAgDA,eAAetB,gBAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = styleProps;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  styleProps\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends({\n    /* Styles applied to the root element. */\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n\n    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    }\n  }, !styleProps.disableGutters && {\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      minHeight: 64\n    }\n  });\n});\nconst AccordionSummaryContent = experimentalStyled('div', {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the children wrapper element. */\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0'\n}, !styleProps.disableGutters && {\n  transition: theme.transitions.create(['margin'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    margin: '20px 0'\n  }\n}));\nconst AccordionSummaryExpandIconWrapper = experimentalStyled('div', {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  /* Styles applied to the `expandIcon`'s wrapper element. */\n  display: 'flex',\n  color: theme.palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n\n  /* Styles applied to the `expandIcon`'s wrapper element if `expanded={true}`. */\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"]);\n\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      styleProps: styleProps,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default AccordionSummary;"]},"metadata":{},"sourceType":"module"}