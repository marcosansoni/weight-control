{"ast":null,"code":"var _jsxFileName = \"C:\\\\Progetti\\\\weight-control\\\\app\\\\src\\\\pages\\\\home\\\\fragments\\\\WeightList.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport WeightRow from './WeightRow';\nimport rangeWeightSelector from '../../../store/state/home/selectors/rangeWeightSelector';\nimport { Color } from '../../../theme/ColorSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderShadow = styled.div`\n  height: 4px;\n  position: absolute;\n  top:  -4px;\n  left: 0;\n  right: 0;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\n  background-color: ${p => p.theme[Color.BACKGROUND]};\n  z-index: 1;\n`;\n_c = HeaderShadow;\nconst FooterShadow = styled.div`\n  height: 8px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: 0 -2px 9px rgba(0, 0, 0, 0.12);\n  background-color: ${p => p.theme[Color.BACKGROUND]};\n  z-index: 10;\n`;\n_c2 = FooterShadow;\nconst Container = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n_c3 = Container;\n\nconst WeightList = props => {\n  _s();\n\n  const {\n    startDate,\n    endDate,\n    onClick\n  } = props;\n  const filteredWeights = useSelector(rangeWeightSelector(startDate, endDate));\n  const [isScrollbarVisible, setIsScrollbarVisible] = useState(false);\n  const [shadowHeader, setShadowHeader] = useState(false);\n  const [shadowFooter, setShadowFooter] = useState(false);\n\n  const handleScrollbarVisibility = element => {\n    if (!(element === null || element === void 0 ? void 0 : element.clientHeight) || !(element === null || element === void 0 ? void 0 : element.scrollHeight)) return;\n\n    if (element.clientHeight < element.scrollHeight && !isScrollbarVisible) {\n      setIsScrollbarVisible(true);\n      setShadowFooter(true);\n      return;\n    }\n\n    if (element.clientHeight > element.scrollHeight && isScrollbarVisible) {\n      setIsScrollbarVisible(false);\n      setShadowFooter(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [shadowHeader && /*#__PURE__*/_jsxDEV(HeaderShadow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), shadowFooter && /*#__PURE__*/_jsxDEV(FooterShadow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      containerRef: handleScrollbarVisibility,\n      onSync: e => handleScrollbarVisibility(e === null || e === void 0 ? void 0 : e.element),\n      onYReachStart: () => {\n        // shadow on footer if content is scrollable\n        setShadowFooter(true); // always no shadows on header when it reaches the top\n\n        setShadowHeader(false);\n      },\n      onScrollY: () => {\n        // shadow on both footer and header if scrollable\n        setShadowFooter(true);\n        setShadowHeader(true);\n      },\n      onYReachEnd: () => {\n        // shadow on header if content is scrollable\n        setShadowHeader(true); // always no shadows on footer when it reaches the top\n\n        setShadowFooter(false);\n      },\n      options: {\n        suppressScrollX: true,\n        maxScrollbarLength: 300\n      },\n      children: filteredWeights.map((w, index) => /*#__PURE__*/_jsxDEV(WeightRow, {\n        last: index === filteredWeights.length - 1,\n        date: moment(w.date).format('DD/MM/YYYY'),\n        value: Number(w.weight).toFixed(1),\n        note: w.note,\n        onClick: () => onClick(w.id)\n      }, w.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeightList, \"V96SfxJ8hJ0waHm25CIh6k+EUbw=\", false, function () {\n  return [useSelector];\n});\n\n_c4 = WeightList;\nWeightList.propTypes = {\n  startDate: PropTypes.instanceOf(moment),\n  endDate: PropTypes.instanceOf(moment),\n  onClick: PropTypes.func\n};\nWeightList.defaultProps = {\n  startDate: undefined,\n  endDate: undefined,\n  onClick: undefined\n};\nexport default WeightList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HeaderShadow\");\n$RefreshReg$(_c2, \"FooterShadow\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"WeightList\");","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/pages/home/fragments/WeightList.js"],"names":["moment","PerfectScrollbar","React","useState","PropTypes","useSelector","styled","WeightRow","rangeWeightSelector","Color","HeaderShadow","div","p","theme","BACKGROUND","FooterShadow","Container","WeightList","props","startDate","endDate","onClick","filteredWeights","isScrollbarVisible","setIsScrollbarVisible","shadowHeader","setShadowHeader","shadowFooter","setShadowFooter","handleScrollbarVisibility","element","clientHeight","scrollHeight","e","suppressScrollX","maxScrollbarLength","map","w","index","length","date","format","Number","weight","toFixed","note","id","propTypes","instanceOf","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport WeightRow from './WeightRow';\r\nimport rangeWeightSelector from '../../../store/state/home/selectors/rangeWeightSelector';\r\nimport { Color } from '../../../theme/ColorSchema';\r\n\r\nconst HeaderShadow = styled.div`\r\n  height: 4px;\r\n  position: absolute;\r\n  top:  -4px;\r\n  left: 0;\r\n  right: 0;\r\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.12);\r\n  background-color: ${(p) => p.theme[Color.BACKGROUND]};\r\n  z-index: 1;\r\n`;\r\n\r\nconst FooterShadow = styled.div`\r\n  height: 8px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  box-shadow: 0 -2px 9px rgba(0, 0, 0, 0.12);\r\n  background-color: ${(p) => p.theme[Color.BACKGROUND]};\r\n  z-index: 10;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst WeightList = (props) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    onClick,\r\n  } = props;\r\n  const filteredWeights = useSelector(rangeWeightSelector(startDate, endDate));\r\n  const [isScrollbarVisible, setIsScrollbarVisible] = useState(false);\r\n  const [shadowHeader, setShadowHeader] = useState(false);\r\n  const [shadowFooter, setShadowFooter] = useState(false);\r\n\r\n  const handleScrollbarVisibility = (element) => {\r\n    if (!element?.clientHeight || !element?.scrollHeight) return;\r\n    if (element.clientHeight < element.scrollHeight && !isScrollbarVisible) {\r\n      setIsScrollbarVisible(true);\r\n      setShadowFooter(true);\r\n      return;\r\n    }\r\n    if (element.clientHeight > element.scrollHeight && isScrollbarVisible) {\r\n      setIsScrollbarVisible(false);\r\n      setShadowFooter(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {shadowHeader && <HeaderShadow />}\r\n      {shadowFooter && <FooterShadow />}\r\n      <PerfectScrollbar\r\n        containerRef={handleScrollbarVisibility}\r\n        onSync={(e) => handleScrollbarVisibility(e?.element)}\r\n        onYReachStart={() => {\r\n        // shadow on footer if content is scrollable\r\n          setShadowFooter(true);\r\n          // always no shadows on header when it reaches the top\r\n          setShadowHeader(false);\r\n        }}\r\n        onScrollY={() => {\r\n        // shadow on both footer and header if scrollable\r\n          setShadowFooter(true);\r\n          setShadowHeader(true);\r\n        }}\r\n        onYReachEnd={() => {\r\n        // shadow on header if content is scrollable\r\n          setShadowHeader(true);\r\n          // always no shadows on footer when it reaches the top\r\n          setShadowFooter(false);\r\n        }}\r\n        options={{\r\n          suppressScrollX: true,\r\n          maxScrollbarLength: 300,\r\n        }}\r\n      >\r\n        {filteredWeights\r\n          .map((w, index) => (\r\n            <WeightRow\r\n              last={index === filteredWeights.length - 1}\r\n              date={moment(w.date)\r\n                .format('DD/MM/YYYY')}\r\n              value={Number(w.weight)\r\n                .toFixed(1)}\r\n              key={w.id}\r\n              note={w.note}\r\n              onClick={() => onClick(w.id)}\r\n            />\r\n          ))}\r\n      </PerfectScrollbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nWeightList.propTypes = {\r\n  startDate: PropTypes.instanceOf(moment),\r\n  endDate: PropTypes.instanceOf(moment),\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nWeightList.defaultProps = {\r\n  startDate: undefined,\r\n  endDate: undefined,\r\n  onClick: undefined,\r\n};\r\n\r\nexport default WeightList;\r\n"]},"metadata":{},"sourceType":"module"}