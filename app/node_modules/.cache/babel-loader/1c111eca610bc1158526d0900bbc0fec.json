{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nimport { getCollapseUtilityClass } from './collapseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    orientation,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\n\nconst CollapseRoot = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[styleProps.orientation], styleProps.state === 'entered' && styles.entered, styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && styles.hidden);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height')\n}, styleProps.orientation === 'horizontal' && {\n  height: 'auto',\n  width: 0,\n  transition: theme.transitions.create('width')\n}, styleProps.state === 'entered' && _extends({\n  height: 'auto',\n  overflow: 'visible'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto'\n}), styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && {\n  visibility: 'hidden'\n}));\n/* Styles applied to the outer wrapper element. */\n\nconst CollapseWrapper = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})(({\n  styleProps\n}) => _extends({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/* Styles applied to the inner wrapper element. */\n\nconst CollapseWrapperInner = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: (props, styles) => styles.wrapperInner\n})(({\n  styleProps\n}) => _extends({\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n\n  const {\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"collapsedSize\", \"component\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const styleProps = _extends({}, props, {\n    orientation,\n    collapsedSize: collapsedSizeProp\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const theme = useTheme();\n  const timer = React.useRef();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: (state, childProps) => /*#__PURE__*/_jsx(CollapseRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n      }, style),\n      styleProps: _extends({}, styleProps, {\n        state\n      }),\n      ref: handleRef\n    }, childProps, {\n      children: /*#__PURE__*/_jsx(CollapseWrapper, {\n        styleProps: _extends({}, styleProps, {\n          state\n        }),\n        className: classes.wrapper,\n        ref: wrapperRef,\n        children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n          styleProps: _extends({}, styleProps, {\n            state\n          }),\n          className: classes.wrapperInner,\n          children: children\n        })\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default Collapse;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/Collapse/Collapse.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","clsx","PropTypes","Transition","elementTypeAcceptingRef","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","duration","getTransitionProps","useTheme","useForkRef","getCollapseUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","orientation","classes","slots","root","entered","hidden","wrapper","wrapperInner","CollapseRoot","name","slot","overridesResolver","props","styles","state","in","collapsedSize","theme","height","overflow","transition","transitions","create","width","visibility","CollapseWrapper","display","CollapseWrapperInner","Collapse","forwardRef","inProps","ref","children","className","collapsedSizeProp","component","easing","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","standard","TransitionComponent","other","timer","useRef","wrapperRef","autoTransitionDuration","isHorizontal","size","useEffect","clearTimeout","current","nodeRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","undefined","getWrapperSize","handleEnter","isAppearing","position","handleEntering","wrapperSize","transitionDuration","transitionTimingFunction","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","addEndListener","next","setTimeout","childProps","as","process","env","NODE_ENV","propTypes","object","string","oneOfType","number","shape","enter","exit","bool","func","oneOf","sx","appear","muiSupportAuto"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nimport { getCollapseUtilityClass } from './collapseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    orientation,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\n\nconst CollapseRoot = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[styleProps.orientation], styleProps.state === 'entered' && styles.entered, styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && styles.hidden);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height')\n}, styleProps.orientation === 'horizontal' && {\n  height: 'auto',\n  width: 0,\n  transition: theme.transitions.create('width')\n}, styleProps.state === 'entered' && _extends({\n  height: 'auto',\n  overflow: 'visible'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto'\n}), styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && {\n  visibility: 'hidden'\n}));\n/* Styles applied to the outer wrapper element. */\n\nconst CollapseWrapper = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})(({\n  styleProps\n}) => _extends({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/* Styles applied to the inner wrapper element. */\n\nconst CollapseWrapperInner = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: (props, styles) => styles.wrapperInner\n})(({\n  styleProps\n}) => _extends({\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n\n  const {\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"collapsedSize\", \"component\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const styleProps = _extends({}, props, {\n    orientation,\n    collapsedSize: collapsedSizeProp\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const theme = useTheme();\n  const timer = React.useRef();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: (state, childProps) => /*#__PURE__*/_jsx(CollapseRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n      }, style),\n      styleProps: _extends({}, styleProps, {\n        state\n      }),\n      ref: handleRef\n    }, childProps, {\n      children: /*#__PURE__*/_jsx(CollapseWrapper, {\n        styleProps: _extends({}, styleProps, {\n          state\n        }),\n        className: classes.wrapper,\n        ref: wrapperRef,\n        children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n          styleProps: _extends({}, styleProps, {\n            state\n          }),\n          className: classes.wrapperInner,\n          children: children\n        })\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}