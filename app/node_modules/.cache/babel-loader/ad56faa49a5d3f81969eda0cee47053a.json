{"ast":null,"code":"var _jsxFileName = \"C:\\\\Progetti\\\\weight-control\\\\app\\\\src\\\\pages\\\\home\\\\fragments\\\\WeightFilterDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, useMediaQuery } from '@material-ui/core';\nimport LoadingButton from '@material-ui/lab/LoadingButton';\nimport { useTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport moment from 'moment';\nimport { Color } from '../../../theme/ColorSchema';\nimport MediaQuerySelector from '../../../constants/responsive/MediaQuerySelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContent = styled(DialogContent)`\n  padding: 16px 24px 0 !important;\n`;\n_c = StyledContent;\nconst StyledDialog = styled(Dialog)`\n  .MuiDialog-paper {\n    width: 450px;\n    max-width: 100%;\n\n    ${MediaQuerySelector.SMALL} {\n      width: 100%;\n      max-width: 100%;\n    }\n  }\n`;\n_c2 = StyledDialog;\nconst Row = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n\n  :last-child {\n    padding-bottom: 0;\n  }\n`;\n_c3 = Row;\nconst Name = styled.div`\n  font-weight: 550;\n  font-size: 18px;\n  min-width: 126px;\n  height: 56px;\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme[Color.TEXT_DARK]};\n`;\n_c4 = Name;\nconst StyledIconButton = styled(IconButton)`\n  position: absolute !important;\n  top: 8px;\n  right: 8px;\n`;\n_c5 = StyledIconButton;\nconst ContainerInput = styled.div`\n  width: 100%;\n`;\n_c6 = ContainerInput;\nconst Subtitle = styled.div`\n  padding-bottom: 16px;\n  font-size: 16px;\n`;\n_c7 = Subtitle;\nconst DateFormat = 'YYYY-MM-DD';\n\nconst WeightFilterDialog = props => {\n  _s();\n\n  const {\n    onClose,\n    startDate: defaultStartDate,\n    endDate: defaultEndDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    open,\n    showLabel: defaultShowLabel,\n    onChangeLabelVisibility\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const fullScreen = useMediaQuery(MediaQuerySelector.SMALL);\n  const [startDate, setStartDate] = useState(defaultStartDate);\n  const [endDate, setEndDate] = useState(defaultEndDate);\n  const [showLabel, setShowLabel] = useState(defaultShowLabel);\n  useEffect(() => {\n    if (startDate !== defaultStartDate) setStartDate(defaultStartDate);\n  }, [defaultStartDate]);\n  useEffect(() => {\n    if (endDate !== defaultEndDate) setEndDate(defaultEndDate);\n  }, [defaultEndDate]);\n  useEffect(() => {\n    if (showLabel !== defaultShowLabel) setStartDate(defaultShowLabel);\n  }, [defaultShowLabel]);\n\n  const handleApplyFilter = () => {\n    onChangeStartDate(startDate);\n    onChangeEndDate(endDate);\n    onChangeLabelVisibility(showLabel);\n    onClose();\n  };\n\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(StyledDialog, {\n    onClose: onClose,\n    open: open,\n    fullScreen: fullScreen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      onClose: onClose,\n      children: [t('home.filters.title'), onClose ? /*#__PURE__*/_jsxDEV(StyledIconButton, {\n        \"aria-label\": \"close\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n        children: t('home.filters.subtitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Name, {\n          children: t('home.filters.startDate')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"date\",\n            fullWidth: true,\n            name: \"date\",\n            variant: \"outlined\",\n            value: startDate.format(DateFormat),\n            onChange: e => setStartDate(moment(e.target.value, DateFormat))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Name, {\n          children: t('home.filters.endDate')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"date\",\n            fullWidth: true,\n            name: \"date\",\n            variant: \"outlined\",\n            value: endDate.format(DateFormat),\n            onChange: e => setEndDate(moment(e.target.value, DateFormat))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        style: {\n          marginTop: 16\n        },\n        children: t('home.filters.graphOptions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Name, {\n          style: {\n            width: '100%'\n          },\n          children: t('home.filters.showLabel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"primary\",\n            checked: showLabel,\n            onChange: () => setShowLabel(!showLabel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      style: {\n        height: 64,\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: t('home.rows.details.secondary')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        pending: false,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleApplyFilter,\n        children: t('home.rows.details.primary')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeightFilterDialog, \"Bo8atO+Kb1MxIAtUUwJqOEbTCco=\", false, function () {\n  return [useTranslation, useMediaQuery];\n});\n\n_c8 = WeightFilterDialog;\nWeightFilterDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  startDate: PropTypes.instanceOf(moment),\n  onChangeStartDate: PropTypes.func,\n  endDate: PropTypes.instanceOf(moment),\n  onChangeEndDate: PropTypes.func,\n  showLabel: PropTypes.bool,\n  onChangeLabelVisibility: PropTypes.func\n};\nWeightFilterDialog.defaultProps = {\n  open: undefined,\n  onClose: undefined,\n  startDate: undefined,\n  endDate: undefined,\n  onChangeStartDate: undefined,\n  onChangeEndDate: undefined,\n  showLabel: undefined,\n  onChangeLabelVisibility: undefined\n};\nexport default WeightFilterDialog;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"StyledContent\");\n$RefreshReg$(_c2, \"StyledDialog\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Name\");\n$RefreshReg$(_c5, \"StyledIconButton\");\n$RefreshReg$(_c6, \"ContainerInput\");\n$RefreshReg$(_c7, \"Subtitle\");\n$RefreshReg$(_c8, \"WeightFilterDialog\");","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/pages/home/fragments/WeightFilterDialog.js"],"names":["React","useEffect","useState","PropTypes","styled","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","TextField","useMediaQuery","LoadingButton","useTranslation","CloseIcon","moment","Color","MediaQuerySelector","StyledContent","StyledDialog","SMALL","Row","div","Name","p","theme","TEXT_DARK","StyledIconButton","ContainerInput","Subtitle","DateFormat","WeightFilterDialog","props","onClose","startDate","defaultStartDate","endDate","defaultEndDate","onChangeStartDate","onChangeEndDate","open","showLabel","defaultShowLabel","onChangeLabelVisibility","t","fullScreen","setStartDate","setEndDate","setShowLabel","handleApplyFilter","format","e","target","value","marginTop","width","display","alignItems","height","position","propTypes","bool","func","instanceOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button, Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  TextField,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport moment from 'moment';\r\nimport { Color } from '../../../theme/ColorSchema';\r\nimport MediaQuerySelector from '../../../constants/responsive/MediaQuerySelector';\r\n\r\nconst StyledContent = styled(DialogContent)`\r\n  padding: 16px 24px 0 !important;\r\n`;\r\n\r\nconst StyledDialog = styled(Dialog)`\r\n  .MuiDialog-paper {\r\n    width: 450px;\r\n    max-width: 100%;\r\n\r\n    ${MediaQuerySelector.SMALL} {\r\n      width: 100%;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  padding-bottom: 16px;\r\n\r\n  :last-child {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: 550;\r\n  font-size: 18px;\r\n  min-width: 126px;\r\n  height: 56px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${(p) => p.theme[Color.TEXT_DARK]};\r\n`;\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  position: absolute !important;\r\n  top: 8px;\r\n  right: 8px;\r\n`;\r\n\r\nconst ContainerInput = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n  padding-bottom: 16px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst DateFormat = 'YYYY-MM-DD';\r\n\r\nconst WeightFilterDialog = (props) => {\r\n  const {\r\n    onClose,\r\n    startDate: defaultStartDate,\r\n    endDate: defaultEndDate,\r\n    onChangeStartDate,\r\n    onChangeEndDate,\r\n    open,\r\n    showLabel: defaultShowLabel,\r\n    onChangeLabelVisibility,\r\n  } = props;\r\n  const { t } = useTranslation();\r\n  const fullScreen = useMediaQuery(MediaQuerySelector.SMALL);\r\n\r\n  const [startDate, setStartDate] = useState(defaultStartDate);\r\n  const [endDate, setEndDate] = useState(defaultEndDate);\r\n  const [showLabel, setShowLabel] = useState(defaultShowLabel);\r\n\r\n  useEffect(() => {\r\n    if (startDate !== defaultStartDate) setStartDate(defaultStartDate);\r\n  }, [defaultStartDate]);\r\n\r\n  useEffect(() => {\r\n    if (endDate !== defaultEndDate) setEndDate(defaultEndDate);\r\n  }, [defaultEndDate]);\r\n\r\n  useEffect(() => {\r\n    if (showLabel !== defaultShowLabel) setStartDate(defaultShowLabel);\r\n  }, [defaultShowLabel]);\r\n\r\n  const handleApplyFilter = () => {\r\n    onChangeStartDate(startDate);\r\n    onChangeEndDate(endDate);\r\n    onChangeLabelVisibility(showLabel);\r\n    onClose();\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <StyledDialog onClose={onClose} open={open} fullScreen={fullScreen}>\r\n      <DialogTitle onClose={onClose}>\r\n        {t('home.filters.title')}\r\n        {onClose ? (\r\n          <StyledIconButton aria-label=\"close\" onClick={onClose}>\r\n            <CloseIcon />\r\n          </StyledIconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <StyledContent dividers>\r\n        <Subtitle>{t('home.filters.subtitle')}</Subtitle>\r\n        <Row>\r\n          <Name>{t('home.filters.startDate')}</Name>\r\n          <ContainerInput>\r\n            <TextField\r\n              type=\"date\"\r\n              fullWidth\r\n              name=\"date\"\r\n              variant=\"outlined\"\r\n              value={startDate.format(DateFormat)}\r\n              onChange={(e) => setStartDate(moment(e.target.value, DateFormat))}\r\n            />\r\n          </ContainerInput>\r\n        </Row>\r\n        <Row>\r\n          <Name>{t('home.filters.endDate')}</Name>\r\n          <ContainerInput>\r\n            <TextField\r\n              type=\"date\"\r\n              fullWidth\r\n              name=\"date\"\r\n              variant=\"outlined\"\r\n              value={endDate.format(DateFormat)}\r\n              onChange={(e) => setEndDate(moment(e.target.value, DateFormat))}\r\n            />\r\n          </ContainerInput>\r\n        </Row>\r\n        <Subtitle style={{ marginTop: 16 }}>{t('home.filters.graphOptions')}</Subtitle>\r\n        <Row>\r\n          <Name style={{ width: '100%' }}>{t('home.filters.showLabel')}</Name>\r\n          <ContainerInput style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={showLabel}\r\n              onChange={() => setShowLabel(!showLabel)}\r\n            />\r\n          </ContainerInput>\r\n        </Row>\r\n      </StyledContent>\r\n      <DialogActions style={{\r\n        height: 64,\r\n        position: 'relative',\r\n      }}\r\n      >\r\n        <Button\r\n          onClick={onClose}\r\n        >\r\n          {t('home.rows.details.secondary')}\r\n        </Button>\r\n        <LoadingButton\r\n          pending={false}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleApplyFilter}\r\n        >\r\n          {t('home.rows.details.primary')}\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </StyledDialog>\r\n  );\r\n};\r\n\r\nWeightFilterDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  startDate: PropTypes.instanceOf(moment),\r\n  onChangeStartDate: PropTypes.func,\r\n  endDate: PropTypes.instanceOf(moment),\r\n  onChangeEndDate: PropTypes.func,\r\n  showLabel: PropTypes.bool,\r\n  onChangeLabelVisibility: PropTypes.func,\r\n};\r\n\r\nWeightFilterDialog.defaultProps = {\r\n  open: undefined,\r\n  onClose: undefined,\r\n  startDate: undefined,\r\n  endDate: undefined,\r\n  onChangeStartDate: undefined,\r\n  onChangeEndDate: undefined,\r\n  showLabel: undefined,\r\n  onChangeLabelVisibility: undefined,\r\n};\r\n\r\nexport default WeightFilterDialog;\r\n"]},"metadata":{},"sourceType":"module"}