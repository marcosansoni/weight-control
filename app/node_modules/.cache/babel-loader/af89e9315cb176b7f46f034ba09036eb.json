{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport tabsClasses, { getTabsUtilityClass } from './tabsClasses';\nimport ownerDocument from '../utils/ownerDocument';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return list.firstChild;\n};\n\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return list.lastChild;\n};\n\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\n\nconst TabsRoot = experimentalStyled('div', {}, {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({\n      [`& .${tabsClasses.scrollButtons}`]: _extends({}, styles.scrollButtons, styleProps.scrollButtonsHideMobile && styles.scrollButtonsHideMobile)\n    }, styles.root, styleProps.vertical && styles.vertical);\n  }\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  overflow: 'hidden',\n  minHeight: 48,\n  WebkitOverflowScrolling: 'touch',\n  // Add iOS momentum scrolling.\n  display: 'flex'\n}, styleProps.vertical && {\n  flexDirection: 'column'\n}, styleProps.scrollButtonsHideMobile && {\n  [`& .${tabsClasses.scrollButtons}`]: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n}));\nconst TabsScroller = experimentalStyled('div', {}, {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.scroller, styleProps.fixed && styles.fixed, styleProps.hideScrollbar && styles.hideScrollbar, styleProps.scrollableX && styles.scrollableX, styleProps.scrollableY && styles.scrollableY);\n  }\n})(({\n  styleProps\n}) => _extends({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap'\n}, styleProps.fixed && {\n  overflowX: 'hidden',\n  width: '100%'\n}, styleProps.hideScrollbar && {\n  // Hide dimensionless scrollbar on MacOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n}, styleProps.scrollableX && {\n  overflowX: 'auto',\n  overflowY: 'hidden'\n}, styleProps.scrollableY && {\n  overflowY: 'auto',\n  overflowX: 'hidden'\n}));\nconst FlexContainer = experimentalStyled('div', {}, {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.flexContainer, styleProps.vertical && styles.flexContainerVertical, styleProps.centered && styles.centered);\n  }\n})(({\n  styleProps\n}) => _extends({\n  display: 'flex'\n}, styleProps.vertical && {\n  flexDirection: 'column'\n}, styleProps.centered && {\n  justifyContent: 'center'\n}));\nconst TabsIndicator = experimentalStyled('span', {}, {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create()\n}, styleProps.indicatorColor === 'primary' && {\n  backgroundColor: theme.palette.primary.main\n}, styleProps.indicatorColor === 'secondary' && {\n  backgroundColor: theme.palette.secondary.main\n}, styleProps.vertical && {\n  height: '100%',\n  width: 2,\n  right: 0\n}));\nconst TabsScrollbarSize = experimentalStyled(ScrollbarSize, {}, {\n  name: 'MuiTabs',\n  slot: 'ScrollbarSize'\n})({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on MacOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n});\nconst defaultIndicatorStyle = {};\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    TabIndicatorProps = {},\n    TabScrollButtonProps = {},\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  const styleProps = _extends({}, props, {\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    const newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    }; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue);\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\n    updateScrollButtonState();\n  }), [updateScrollButtonState]);\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, _extends({}, TabIndicatorProps, {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    styleProps: styleProps,\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = currentFocus.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref,\n    as: component\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      styleProps: styleProps,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      onScroll: handleTabsScroll,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        styleProps: styleProps,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/Tabs/Tabs.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","isFragment","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","useTheme","debounce","ownerWindow","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","TabScrollButton","useEventCallback","tabsClasses","getTabsUtilityClass","ownerDocument","jsx","_jsx","jsxs","_jsxs","nextItem","list","item","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","useUtilityClasses","styleProps","vertical","fixed","hideScrollbar","scrollableX","scrollableY","centered","scrollButtonsHideMobile","classes","slots","root","scroller","flexContainer","indicator","scrollButtons","TabsRoot","name","slot","overridesResolver","props","styles","theme","overflow","minHeight","WebkitOverflowScrolling","display","flexDirection","breakpoints","down","TabsScroller","position","flex","whiteSpace","overflowX","width","scrollbarWidth","overflowY","FlexContainer","flexContainerVertical","justifyContent","TabsIndicator","height","bottom","transition","transitions","create","indicatorColor","backgroundColor","palette","primary","main","secondary","right","TabsScrollbarSize","defaultIndicatorStyle","Tabs","forwardRef","inProps","ref","isRtl","direction","ariaLabel","ariaLabelledBy","action","children","childrenProp","className","component","allowScrollButtonsMobile","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","other","scrollable","scrollStart","start","end","clientSize","size","process","env","NODE_ENV","console","error","mounted","setMounted","useState","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","scrollWidth","top","left","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","animation","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","getConditionalElements","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","scrollHeight","clientHeight","showStartScroll","showEndScroll","useEffect","handleResize","win","addEventListener","clear","removeEventListener","handleTabsScroll","useMemo","useImperativeHandle","updateIndicator","updateScrollButtons","style","childIndex","Children","map","child","isValidElement","childValue","undefined","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","activeElement","role","previousItemKey","nextItemKey","key","preventDefault","as","onScroll","onKeyDown","propTypes","bool","string","node","object","elementType","oneOf","func","sx","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport tabsClasses, { getTabsUtilityClass } from './tabsClasses';\nimport ownerDocument from '../utils/ownerDocument';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return list.firstChild;\n};\n\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return list.lastChild;\n};\n\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\n\nconst TabsRoot = experimentalStyled('div', {}, {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({\n      [`& .${tabsClasses.scrollButtons}`]: _extends({}, styles.scrollButtons, styleProps.scrollButtonsHideMobile && styles.scrollButtonsHideMobile)\n    }, styles.root, styleProps.vertical && styles.vertical);\n  }\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  overflow: 'hidden',\n  minHeight: 48,\n  WebkitOverflowScrolling: 'touch',\n  // Add iOS momentum scrolling.\n  display: 'flex'\n}, styleProps.vertical && {\n  flexDirection: 'column'\n}, styleProps.scrollButtonsHideMobile && {\n  [`& .${tabsClasses.scrollButtons}`]: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n}));\nconst TabsScroller = experimentalStyled('div', {}, {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.scroller, styleProps.fixed && styles.fixed, styleProps.hideScrollbar && styles.hideScrollbar, styleProps.scrollableX && styles.scrollableX, styleProps.scrollableY && styles.scrollableY);\n  }\n})(({\n  styleProps\n}) => _extends({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap'\n}, styleProps.fixed && {\n  overflowX: 'hidden',\n  width: '100%'\n}, styleProps.hideScrollbar && {\n  // Hide dimensionless scrollbar on MacOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n}, styleProps.scrollableX && {\n  overflowX: 'auto',\n  overflowY: 'hidden'\n}, styleProps.scrollableY && {\n  overflowY: 'auto',\n  overflowX: 'hidden'\n}));\nconst FlexContainer = experimentalStyled('div', {}, {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.flexContainer, styleProps.vertical && styles.flexContainerVertical, styleProps.centered && styles.centered);\n  }\n})(({\n  styleProps\n}) => _extends({\n  display: 'flex'\n}, styleProps.vertical && {\n  flexDirection: 'column'\n}, styleProps.centered && {\n  justifyContent: 'center'\n}));\nconst TabsIndicator = experimentalStyled('span', {}, {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create()\n}, styleProps.indicatorColor === 'primary' && {\n  backgroundColor: theme.palette.primary.main\n}, styleProps.indicatorColor === 'secondary' && {\n  backgroundColor: theme.palette.secondary.main\n}, styleProps.vertical && {\n  height: '100%',\n  width: 2,\n  right: 0\n}));\nconst TabsScrollbarSize = experimentalStyled(ScrollbarSize, {}, {\n  name: 'MuiTabs',\n  slot: 'ScrollbarSize'\n})({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on MacOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n});\nconst defaultIndicatorStyle = {};\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    TabIndicatorProps = {},\n    TabScrollButtonProps = {},\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  const styleProps = _extends({}, props, {\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    const newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    }; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue);\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\n    updateScrollButtonState();\n  }), [updateScrollButtonState]);\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, _extends({}, TabIndicatorProps, {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    styleProps: styleProps,\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = currentFocus.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref,\n    as: component\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      styleProps: styleProps,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      onScroll: handleTabsScroll,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        styleProps: styleProps,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}