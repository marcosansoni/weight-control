{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.orientation && styles[styleProps.orientation]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, styleProps.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: 'rotate(90deg)'\n  }\n}));\n\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/TabScrollButton/TabScrollButton.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useThemeProps","experimentalStyled","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","height","transform","_ref","fontSize","_ref2","TabScrollButton","forwardRef","inProps","ref","className","direction","other","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.orientation && styles[styleProps.orientation]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, styleProps.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: 'rotate(90deg)'\n  }\n}));\n\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;"]},"metadata":{},"sourceType":"module"}