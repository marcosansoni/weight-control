{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport i18n from 'i18next';\nimport Endpoint, { urlFactory } from '../../../constants/Endpoint';\nimport EndpointStatus from '../../../constants/EndpointStatus';\nimport LoginErrorCode from '../constants/LoginErrorCode';\nimport ErrorCode from '../../../constants/ErrorCode';\nimport getWeightSubWorker from './subworker/getWeightSubWorker';\nimport deleteWeightErrorActionCreator from '../actionCreator/deleteWeightErrorActionCreator';\nimport deleteData from '../../../utils/fetchMethod/deleteData';\nimport deleteWeightSuccessActionCreator from '../actionCreator/deleteWeightSuccessActionCreator';\nimport Notification from '../../../../entities/Notification';\n\nfunction* deleteWeightWorker(action) {\n  const {\n    id\n  } = action.payload || {};\n  const response = yield deleteData({\n    url: urlFactory(`${Endpoint.WEIGHT}/${id}`)\n  });\n  const {\n    data,\n    status\n  } = response || {};\n\n  if (status === EndpointStatus.NOT_FOUND) {\n    return yield put(deleteWeightErrorActionCreator([new Notification({\n      message: i18n.t('home.snackbar.notFound'),\n      code: LoginErrorCode.NOT_FOUND\n    })]));\n  }\n\n  if (status === EndpointStatus.BAD_REQUEST) {\n    var _data$errors;\n\n    return yield put(deleteWeightErrorActionCreator([new Notification({\n      message: (_data$errors = data.errors) === null || _data$errors === void 0 ? void 0 : _data$errors[0],\n      code: LoginErrorCode.NOT_FOUND\n    })]));\n  }\n\n  if (status === EndpointStatus.SUCCESS) {\n    const {\n      errors,\n      result\n    } = yield getWeightSubWorker();\n\n    if (errors) {\n      return yield put(deleteWeightErrorActionCreator(errors));\n    }\n\n    const notifications = [new Notification({\n      message: i18n.t('home.snackbar.deleteSuccess')\n    })];\n    return yield put(deleteWeightSuccessActionCreator(result === null || result === void 0 ? void 0 : result.weightById, notifications));\n  } // Generic errorCode\n\n\n  return yield put(deleteWeightErrorActionCreator([new Notification({\n    code: ErrorCode.DEFAULT\n  })]));\n}\n\nexport default deleteWeightWorker;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/store/state/home/worker/deleteWeightWorker.js"],"names":["put","i18n","Endpoint","urlFactory","EndpointStatus","LoginErrorCode","ErrorCode","getWeightSubWorker","deleteWeightErrorActionCreator","deleteData","deleteWeightSuccessActionCreator","Notification","deleteWeightWorker","action","id","payload","response","url","WEIGHT","data","status","NOT_FOUND","message","t","code","BAD_REQUEST","errors","SUCCESS","result","notifications","weightById","DEFAULT"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,6BAArC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,8BAAP,MAA2C,iDAA3C;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,gCAAP,MAA6C,mDAA7C;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;AAEA,UAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAASD,MAAM,CAACE,OAAP,IAAkB,EAAjC;AAEA,QAAMC,QAAQ,GAAG,MAAMP,UAAU,CAAC;AAChCQ,IAAAA,GAAG,EAAEd,UAAU,CAAE,GAAED,QAAQ,CAACgB,MAAO,IAAGJ,EAAG,EAA1B;AADiB,GAAD,CAAjC;AAIA,QAAM;AACJK,IAAAA,IADI;AAEJC,IAAAA;AAFI,MAGFJ,QAAQ,IAAI,EAHhB;;AAKA,MAAII,MAAM,KAAKhB,cAAc,CAACiB,SAA9B,EAAyC;AACvC,WAAO,MAAMrB,GAAG,CAACQ,8BAA8B,CAAC,CAAC,IAAIG,YAAJ,CAAiB;AAChEW,MAAAA,OAAO,EAAErB,IAAI,CAACsB,CAAL,CAAO,wBAAP,CADuD;AAEhEC,MAAAA,IAAI,EAAEnB,cAAc,CAACgB;AAF2C,KAAjB,CAAD,CAAD,CAA/B,CAAhB;AAID;;AAED,MAAID,MAAM,KAAKhB,cAAc,CAACqB,WAA9B,EAA2C;AAAA;;AACzC,WAAO,MAAMzB,GAAG,CAACQ,8BAA8B,CAAC,CAAC,IAAIG,YAAJ,CAAiB;AAChEW,MAAAA,OAAO,kBAAEH,IAAI,CAACO,MAAP,iDAAE,aAAc,CAAd,CADuD;AAEhEF,MAAAA,IAAI,EAAEnB,cAAc,CAACgB;AAF2C,KAAjB,CAAD,CAAD,CAA/B,CAAhB;AAID;;AAED,MAAID,MAAM,KAAKhB,cAAc,CAACuB,OAA9B,EAAuC;AACrC,UAAM;AACJD,MAAAA,MADI;AAEJE,MAAAA;AAFI,QAGF,MAAMrB,kBAAkB,EAH5B;;AAIA,QAAImB,MAAJ,EAAY;AACV,aAAO,MAAM1B,GAAG,CAACQ,8BAA8B,CAACkB,MAAD,CAA/B,CAAhB;AACD;;AAED,UAAMG,aAAa,GAAG,CAAC,IAAIlB,YAAJ,CAAiB;AAAEW,MAAAA,OAAO,EAAErB,IAAI,CAACsB,CAAL,CAAO,6BAAP;AAAX,KAAjB,CAAD,CAAtB;AAEA,WAAO,MAAMvB,GAAG,CAACU,gCAAgC,CAACkB,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,UAAT,EAAqBD,aAArB,CAAjC,CAAhB;AACD,GAtCkC,CAwCnC;;;AACA,SAAO,MAAM7B,GAAG,CAACQ,8BAA8B,CAAC,CAAC,IAAIG,YAAJ,CAAiB;AAAEa,IAAAA,IAAI,EAAElB,SAAS,CAACyB;AAAlB,GAAjB,CAAD,CAAD,CAA/B,CAAhB;AACD;;AAED,eAAenB,kBAAf","sourcesContent":["import { put } from 'redux-saga/effects';\r\nimport i18n from 'i18next';\r\nimport Endpoint, { urlFactory } from '../../../constants/Endpoint';\r\nimport EndpointStatus from '../../../constants/EndpointStatus';\r\nimport LoginErrorCode from '../constants/LoginErrorCode';\r\nimport ErrorCode from '../../../constants/ErrorCode';\r\nimport getWeightSubWorker from './subworker/getWeightSubWorker';\r\nimport deleteWeightErrorActionCreator from '../actionCreator/deleteWeightErrorActionCreator';\r\nimport deleteData from '../../../utils/fetchMethod/deleteData';\r\nimport deleteWeightSuccessActionCreator from '../actionCreator/deleteWeightSuccessActionCreator';\r\nimport Notification from '../../../../entities/Notification';\r\n\r\nfunction* deleteWeightWorker(action) {\r\n  const { id } = action.payload || {};\r\n\r\n  const response = yield deleteData({\r\n    url: urlFactory(`${Endpoint.WEIGHT}/${id}`),\r\n  });\r\n\r\n  const {\r\n    data,\r\n    status,\r\n  } = response || {};\r\n\r\n  if (status === EndpointStatus.NOT_FOUND) {\r\n    return yield put(deleteWeightErrorActionCreator([new Notification({\r\n      message: i18n.t('home.snackbar.notFound'),\r\n      code: LoginErrorCode.NOT_FOUND,\r\n    })]));\r\n  }\r\n\r\n  if (status === EndpointStatus.BAD_REQUEST) {\r\n    return yield put(deleteWeightErrorActionCreator([new Notification({\r\n      message: data.errors?.[0],\r\n      code: LoginErrorCode.NOT_FOUND,\r\n    })]));\r\n  }\r\n\r\n  if (status === EndpointStatus.SUCCESS) {\r\n    const {\r\n      errors,\r\n      result,\r\n    } = yield getWeightSubWorker();\r\n    if (errors) {\r\n      return yield put(deleteWeightErrorActionCreator(errors));\r\n    }\r\n\r\n    const notifications = [new Notification({ message: i18n.t('home.snackbar.deleteSuccess') })];\r\n\r\n    return yield put(deleteWeightSuccessActionCreator(result?.weightById, notifications));\r\n  }\r\n\r\n  // Generic errorCode\r\n  return yield put(deleteWeightErrorActionCreator([new Notification({ code: ErrorCode.DEFAULT })]));\r\n}\r\n\r\nexport default deleteWeightWorker;\r\n"]},"metadata":{},"sourceType":"module"}