{"ast":null,"code":"var _jsxFileName = \"C:\\\\Progetti\\\\weight-control\\\\app\\\\src\\\\pages\\\\home\\\\fragments\\\\WeightAddDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, useMediaQuery } from '@material-ui/core';\nimport LoadingButton from '@material-ui/lab/LoadingButton';\nimport { useTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { Color } from '../../../theme/ColorSchema';\nimport { useFetchType } from '../../../store/state/common/selectors/fetchSelector';\nimport { POST_WEIGHT } from '../../../store/state/home/actionCreator/postWeightActionCreator';\nimport MediaQuerySelector from '../../../constants/responsive/MediaQuerySelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContent = styled(DialogContent)`\n  padding: 16px 24px 0 !important;\n`;\n_c = StyledContent;\nconst StyledDialog = styled(Dialog)`\n  .MuiDialog-paper {\n    width: 450px;\n    max-width: 100%;\n\n    ${MediaQuerySelector.SMALL} {\n      width: 100%;\n      max-width: 100%;\n    }\n  }\n`;\n_c2 = StyledDialog;\nconst Row = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n  align-items: baseline;\n\n  :last-child {\n    padding-bottom: 0;\n  }\n`;\n_c3 = Row;\nconst Name = styled.div`\n  font-weight: 550;\n  font-size: 18px;\n  min-width: 126px;\n  color: ${p => p.theme[Color.TEXT_DARK]};\n`;\n_c4 = Name;\nconst StyledIconButton = styled(IconButton)`\n  position: absolute !important;\n  top: 8px;\n  right: 8px;\n`;\n_c5 = StyledIconButton;\nconst ContainerInput = styled.div`\n  width: 100%;\n`;\n_c6 = ContainerInput;\n\nconst initialValues = date => ({\n  date,\n  note: undefined,\n  weight: undefined\n});\n\nconst validationSchema = t => Yup.object({\n  weight: Yup.number(t('home.rows.add.errors.weight.default')).required(t('home.rows.add.errors.weight.required'))\n});\n\nconst DateFormat = 'YYYY-MM-DD';\n\nconst WeightAddDialog = props => {\n  _s();\n\n  const {\n    onClose,\n    open,\n    defaultDate,\n    onPrimary\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const fetching = useFetchType(POST_WEIGHT);\n  const fullScreen = useMediaQuery(MediaQuerySelector.SMALL);\n  const validationSchemaFormik = useMemo(() => validationSchema(t), []);\n  const initialValuesFormik = useMemo(() => initialValues((defaultDate || moment()).format(DateFormat)), [defaultDate]);\n\n  const handleEdit = formik => {\n    const {\n      date,\n      weight,\n      note\n    } = formik || {};\n    const dateFormatted = moment(date, DateFormat).format('DD/MM/YYYY');\n    onPrimary(dateFormatted, weight, note);\n  };\n\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValuesFormik,\n    validationSchema: validationSchemaFormik,\n    onSubmit: handleEdit,\n    children: formik => /*#__PURE__*/_jsxDEV(StyledDialog, {\n      onClose: onClose,\n      open: open,\n      fullScreen: fullScreen,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: onClose,\n        children: [t('home.rows.add.title'), onClose ? /*#__PURE__*/_jsxDEV(StyledIconButton, {\n          \"aria-label\": \"close\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            children: t('home.rows.add.date')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"date\",\n              fullWidth: true,\n              name: \"date\",\n              variant: \"outlined\",\n              value: formik.values.date,\n              onChange: formik.handleChange,\n              onBlur: () => formik.setFieldTouched('date')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            children: t('home.rows.add.note')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 3,\n              name: \"note\",\n              variant: \"outlined\",\n              value: formik.values.note,\n              onChange: formik.handleChange,\n              onBlur: () => formik.setFieldTouched('note')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            children: t('home.rows.add.weight')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContainerInput, {\n            style: {\n              height: 92\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              fullWidth: true,\n              name: \"weight\",\n              variant: \"outlined\",\n              value: formik.values.weight,\n              onChange: formik.handleChange,\n              onBlur: () => formik.setFieldTouched('weight'),\n              error: formik.touched.weight && Boolean(formik.errors.weight),\n              helperText: formik.touched.weight && formik.errors.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        style: {\n          height: 64,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: t('home.rows.add.secondary')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          pending: fetching,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: formik.handleSubmit,\n          children: t('home.rows.add.primary')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeightAddDialog, \"sm6b6wBW4MHYW0z2syMJoWlfwy0=\", false, function () {\n  return [useTranslation, useFetchType, useMediaQuery];\n});\n\n_c7 = WeightAddDialog;\nWeightAddDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onPrimary: PropTypes.func,\n  defaultDate: PropTypes.any\n};\nWeightAddDialog.defaultProps = {\n  open: undefined,\n  onClose: undefined,\n  onPrimary: undefined,\n  defaultDate: undefined\n};\nexport default WeightAddDialog;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"StyledContent\");\n$RefreshReg$(_c2, \"StyledDialog\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Name\");\n$RefreshReg$(_c5, \"StyledIconButton\");\n$RefreshReg$(_c6, \"ContainerInput\");\n$RefreshReg$(_c7, \"WeightAddDialog\");","map":{"version":3,"sources":["C:/Progetti/weight-control/app/src/pages/home/fragments/WeightAddDialog.js"],"names":["React","useMemo","PropTypes","styled","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","TextField","useMediaQuery","LoadingButton","useTranslation","CloseIcon","Formik","Yup","moment","Color","useFetchType","POST_WEIGHT","MediaQuerySelector","StyledContent","StyledDialog","SMALL","Row","div","Name","p","theme","TEXT_DARK","StyledIconButton","ContainerInput","initialValues","date","note","undefined","weight","validationSchema","t","object","number","required","DateFormat","WeightAddDialog","props","onClose","open","defaultDate","onPrimary","fetching","fullScreen","validationSchemaFormik","initialValuesFormik","format","handleEdit","formik","dateFormatted","values","handleChange","setFieldTouched","height","touched","Boolean","errors","position","handleSubmit","propTypes","bool","func","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  TextField,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport { Color } from '../../../theme/ColorSchema';\r\nimport { useFetchType } from '../../../store/state/common/selectors/fetchSelector';\r\nimport { POST_WEIGHT } from '../../../store/state/home/actionCreator/postWeightActionCreator';\r\nimport MediaQuerySelector from '../../../constants/responsive/MediaQuerySelector';\r\n\r\nconst StyledContent = styled(DialogContent)`\r\n  padding: 16px 24px 0 !important;\r\n`;\r\n\r\nconst StyledDialog = styled(Dialog)`\r\n  .MuiDialog-paper {\r\n    width: 450px;\r\n    max-width: 100%;\r\n\r\n    ${MediaQuerySelector.SMALL} {\r\n      width: 100%;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  padding-bottom: 16px;\r\n  align-items: baseline;\r\n\r\n  :last-child {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: 550;\r\n  font-size: 18px;\r\n  min-width: 126px;\r\n  color: ${(p) => p.theme[Color.TEXT_DARK]};\r\n`;\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  position: absolute !important;\r\n  top: 8px;\r\n  right: 8px;\r\n`;\r\n\r\nconst ContainerInput = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst initialValues = (date) => ({\r\n  date,\r\n  note: undefined,\r\n  weight: undefined,\r\n});\r\n\r\nconst validationSchema = (t) => Yup.object({\r\n  weight: Yup.number(t('home.rows.add.errors.weight.default'))\r\n    .required(t('home.rows.add.errors.weight.required')),\r\n});\r\n\r\nconst DateFormat = 'YYYY-MM-DD';\r\n\r\nconst WeightAddDialog = (props) => {\r\n  const {\r\n    onClose,\r\n    open,\r\n    defaultDate,\r\n    onPrimary,\r\n  } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const fetching = useFetchType(POST_WEIGHT);\r\n  const fullScreen = useMediaQuery(MediaQuerySelector.SMALL);\r\n\r\n  const validationSchemaFormik = useMemo(() => validationSchema(t), []);\r\n  const initialValuesFormik = useMemo(() => (\r\n    initialValues((defaultDate || moment()).format(DateFormat))),\r\n  [defaultDate]);\r\n\r\n  const handleEdit = (formik) => {\r\n    const {\r\n      date,\r\n      weight,\r\n      note,\r\n    } = formik || {};\r\n    const dateFormatted = moment(date, DateFormat)\r\n      .format('DD/MM/YYYY');\r\n    onPrimary(dateFormatted, weight, note);\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValuesFormik}\r\n      validationSchema={validationSchemaFormik}\r\n      onSubmit={handleEdit}\r\n    >\r\n      {(formik) => (\r\n        <StyledDialog onClose={onClose} open={open} fullScreen={fullScreen}>\r\n          <DialogTitle onClose={onClose}>\r\n            {t('home.rows.add.title')}\r\n            {onClose ? (\r\n              <StyledIconButton aria-label=\"close\" onClick={onClose}>\r\n                <CloseIcon />\r\n              </StyledIconButton>\r\n            ) : null}\r\n          </DialogTitle>\r\n          <StyledContent dividers>\r\n            <Row>\r\n              <Name>{t('home.rows.add.date')}</Name>\r\n              <ContainerInput>\r\n                <TextField\r\n                  type=\"date\"\r\n                  fullWidth\r\n                  name=\"date\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.date}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={() => formik.setFieldTouched('date')}\r\n                />\r\n              </ContainerInput>\r\n            </Row>\r\n            <Row>\r\n              <Name>{t('home.rows.add.note')}</Name>\r\n              <ContainerInput>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                  name=\"note\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.note}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={() => formik.setFieldTouched('note')}\r\n                />\r\n              </ContainerInput>\r\n            </Row>\r\n            <Row>\r\n              <Name>{t('home.rows.add.weight')}</Name>\r\n              <ContainerInput style={{ height: 92 }}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  name=\"weight\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.weight}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={() => formik.setFieldTouched('weight')}\r\n                  error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n                  helperText={formik.touched.weight && formik.errors.weight}\r\n                />\r\n              </ContainerInput>\r\n            </Row>\r\n          </StyledContent>\r\n          <DialogActions style={{\r\n            height: 64,\r\n            position: 'relative',\r\n          }}\r\n          >\r\n            <Button\r\n              onClick={onClose}\r\n            >\r\n              {t('home.rows.add.secondary')}\r\n            </Button>\r\n            <LoadingButton\r\n              pending={fetching}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={formik.handleSubmit}\r\n            >\r\n              {t('home.rows.add.primary')}\r\n            </LoadingButton>\r\n          </DialogActions>\r\n        </StyledDialog>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nWeightAddDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  onPrimary: PropTypes.func,\r\n  defaultDate: PropTypes.any,\r\n};\r\n\r\nWeightAddDialog.defaultProps = {\r\n  open: undefined,\r\n  onClose: undefined,\r\n  onPrimary: undefined,\r\n  defaultDate: undefined,\r\n};\r\n\r\nexport default WeightAddDialog;\r\n"]},"metadata":{},"sourceType":"module"}