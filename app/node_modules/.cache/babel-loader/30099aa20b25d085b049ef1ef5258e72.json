{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = styleProps;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = styleProps;\n    return _extends({}, styles.root, isMediaComponent && styles.media, isImageComponent && styles.img);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, styleProps.isMediaComponent && {\n  width: '100%'\n}, styleProps.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const styleProps = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    style: composedStyle,\n    styleProps: styleProps,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/core/CardMedia/CardMedia.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","chainPropTypes","unstable_composeClasses","composeClasses","useThemeProps","experimentalStyled","getCardMediaUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","classes","isMediaComponent","isImageComponent","slots","root","CardMediaRoot","name","slot","overridesResolver","props","styles","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","forwardRef","inProps","ref","children","className","component","image","src","style","other","indexOf","composedStyle","backgroundImage","as","undefined","process","env","NODE_ENV","propTypes","node","Error","object","string","elementType","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = styleProps;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = styleProps;\n    return _extends({}, styles.root, isMediaComponent && styles.media, isImageComponent && styles.img);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, styleProps.isMediaComponent && {\n  width: '100%'\n}, styleProps.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const styleProps = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    style: composedStyle,\n    styleProps: styleProps,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;"]},"metadata":{},"sourceType":"module"}