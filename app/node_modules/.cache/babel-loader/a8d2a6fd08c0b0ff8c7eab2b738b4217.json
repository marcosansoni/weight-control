{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst withStyles = (stylesOrCreator, options = {}) => Component => {\n  const {\n    defaultTheme,\n    withTheme = false,\n    name\n  } = options,\n        stylesOptions = _objectWithoutPropertiesLoose(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Component === undefined) {\n      throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n  }\n\n  let classNamePrefix = name;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!name) {\n      // Provide a better DX outside production.\n      const displayName = getDisplayName(Component);\n\n      if (displayName !== undefined) {\n        classNamePrefix = displayName;\n      }\n    }\n  }\n\n  const useStyles = makeStyles(stylesOrCreator, _extends({\n    defaultTheme,\n    Component,\n    name: name || Component.displayName,\n    classNamePrefix\n  }, stylesOptions));\n  const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n    const other = _objectWithoutPropertiesLoose(props, [\"classes\"]); // The wrapper receives only user supplied props, which could be a subset of\n    // the actual props Component might receive due to merging with defaultProps.\n    // So copying it here would give us the same result in the wrapper as well.\n\n\n    const classes = useStyles(_extends({}, Component.defaultProps, props));\n    let theme;\n    let more = other;\n\n    if (typeof name === 'string' || withTheme) {\n      // name and withTheme are invariant in the outer scope\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      theme = useTheme() || defaultTheme;\n\n      if (name) {\n        more = getThemeProps({\n          theme,\n          name,\n          props: other\n        });\n      } // Provide the theme to the wrapped component.\n      // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n      if (withTheme && !more.theme) {\n        more.theme = theme;\n      }\n    }\n\n    return /*#__PURE__*/_jsx(Component, _extends({\n      ref: ref,\n      classes: classes\n    }, more));\n  });\n  process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.object\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithStyles, Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Exposed for test purposes.\n    WithStyles.Naked = Component;\n    WithStyles.options = options;\n    WithStyles.useStyles = useStyles;\n  }\n\n  return WithStyles;\n};\n\nexport default withStyles;","map":{"version":3,"sources":["C:/Progetti/weight-control/app/node_modules/@material-ui/styles/withStyles/withStyles.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","hoistNonReactStatics","getDisplayName","makeStyles","getThemeProps","useTheme","jsx","_jsx","withStyles","stylesOrCreator","options","Component","defaultTheme","withTheme","name","stylesOptions","process","env","NODE_ENV","undefined","Error","join","classNamePrefix","displayName","useStyles","WithStyles","forwardRef","props","ref","other","classes","defaultProps","theme","more","propTypes","object","Naked"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst withStyles = (stylesOrCreator, options = {}) => Component => {\n  const {\n    defaultTheme,\n    withTheme = false,\n    name\n  } = options,\n        stylesOptions = _objectWithoutPropertiesLoose(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Component === undefined) {\n      throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n  }\n\n  let classNamePrefix = name;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!name) {\n      // Provide a better DX outside production.\n      const displayName = getDisplayName(Component);\n\n      if (displayName !== undefined) {\n        classNamePrefix = displayName;\n      }\n    }\n  }\n\n  const useStyles = makeStyles(stylesOrCreator, _extends({\n    defaultTheme,\n    Component,\n    name: name || Component.displayName,\n    classNamePrefix\n  }, stylesOptions));\n  const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n    const other = _objectWithoutPropertiesLoose(props, [\"classes\"]); // The wrapper receives only user supplied props, which could be a subset of\n    // the actual props Component might receive due to merging with defaultProps.\n    // So copying it here would give us the same result in the wrapper as well.\n\n\n    const classes = useStyles(_extends({}, Component.defaultProps, props));\n    let theme;\n    let more = other;\n\n    if (typeof name === 'string' || withTheme) {\n      // name and withTheme are invariant in the outer scope\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      theme = useTheme() || defaultTheme;\n\n      if (name) {\n        more = getThemeProps({\n          theme,\n          name,\n          props: other\n        });\n      } // Provide the theme to the wrapped component.\n      // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n      if (withTheme && !more.theme) {\n        more.theme = theme;\n      }\n    }\n\n    return /*#__PURE__*/_jsx(Component, _extends({\n      ref: ref,\n      classes: classes\n    }, more));\n  });\n  process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.object\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithStyles, Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Exposed for test purposes.\n    WithStyles.Naked = Component;\n    WithStyles.options = options;\n    WithStyles.useStyles = useStyles;\n  }\n\n  return WithStyles;\n};\n\nexport default withStyles;"]},"metadata":{},"sourceType":"module"}