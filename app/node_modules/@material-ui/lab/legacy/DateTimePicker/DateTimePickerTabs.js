import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import Tab from '@material-ui/core/Tab';
import Tabs from '@material-ui/core/Tabs';
import Paper from '@material-ui/core/Paper';
import { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';
import TimeIcon from '../internal/svg-icons/Time';
import DateRangeIcon from '../internal/svg-icons/DateRange';
import { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var viewToTab = function viewToTab(openView) {
  // TODO: what happens if `openView` is `month`?
  if (openView === 'day' || openView === 'year') {
    return 'date';
  }

  return 'time';
};

var tabToView = function tabToView(tab) {
  if (tab === 'date') {
    return 'day';
  }

  return 'hours';
};

var DateTimePickerTabsRoot = styled(Paper, {}, {
  skipSx: true
})(function (_ref) {
  var _ref$styleProps = _ref.styleProps,
      styleProps = _ref$styleProps === void 0 ? {} : _ref$styleProps;
  return _extends({}, styleProps.wrapperVariant === 'desktop' && {
    order: 1
  });
});
var DateTimePickerTabsTabs = styled(Tabs, {}, {
  skipSx: true
})(function (_ref2) {
  var theme = _ref2.theme;
  var tabsBackground = theme.palette.mode === 'light' ? theme.palette.primary.main : theme.palette.background.default;
  return {
    color: theme.palette.getContrastText(tabsBackground),
    backgroundColor: tabsBackground
  };
});
/**
 * @ignore - internal component.
 */

var _ref3 = /*#__PURE__*/_jsx(DateRangeIcon, {});

var _ref4 = /*#__PURE__*/_jsx(TimeIcon, {});

var DateTimePickerTabs = function DateTimePickerTabs(props) {
  var _props$dateRangeIcon = props.dateRangeIcon,
      dateRangeIcon = _props$dateRangeIcon === void 0 ? _ref3 : _props$dateRangeIcon,
      onChange = props.onChange,
      _props$timeIcon = props.timeIcon,
      timeIcon = _props$timeIcon === void 0 ? _ref4 : _props$timeIcon,
      view = props.view;
  var theme = useTheme();
  var wrapperVariant = React.useContext(WrapperVariantContext);
  var indicatorColor = theme.palette.mode === 'light' ? 'secondary' : 'primary';

  var styleProps = _extends({}, props, {
    wrapperVariant: wrapperVariant
  });

  var handleChange = function handleChange(event, value) {
    onChange(tabToView(value));
  };

  return /*#__PURE__*/_jsx(DateTimePickerTabsRoot, {
    styleProps: styleProps,
    children: /*#__PURE__*/_jsxs(DateTimePickerTabsTabs, {
      variant: "fullWidth",
      value: viewToTab(view),
      onChange: handleChange,
      indicatorColor: indicatorColor,
      children: [/*#__PURE__*/_jsx(Tab, {
        value: "date",
        "aria-label": "pick date",
        icon: /*#__PURE__*/_jsx(React.Fragment, {
          children: dateRangeIcon
        })
      }), /*#__PURE__*/_jsx(Tab, {
        value: "time",
        "aria-label": "pick time",
        icon: /*#__PURE__*/_jsx(React.Fragment, {
          children: timeIcon
        })
      })]
    })
  });
};

export default DateTimePickerTabs;