import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import PropTypes from 'prop-types';
import clsx from 'clsx';
import { capitalize } from '@material-ui/core/utils';
import { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';
import { experimentalStyled, unstable_useThemeProps as useThemeProps } from '@material-ui/core/styles';
import TimelineContext from './TimelineContext';
import { getTimelineUtilityClass } from './timelineClasses';
import { jsx as _jsx } from "react/jsx-runtime";

const useUtilityClasses = styleProps => {
  const {
    position,
    classes
  } = styleProps;
  const slots = {
    root: ['root', position && `position${capitalize(position)}`]
  };
  return composeClasses(slots, getTimelineUtilityClass, classes);
};

const TimelineRoot = experimentalStyled('ul', {}, {
  name: 'MuiTimeline',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    const {
      styleProps
    } = props;
    return _extends({}, styles.root, styleProps.position && styles[`position${capitalize(styleProps.position)}`]);
  }
})({
  display: 'flex',
  flexDirection: 'column',
  padding: '6px 16px',
  flexGrow: 1
});
/**
 *
 * Demos:
 *
 * - [Timeline](https://material-ui.com/components/timeline/)
 *
 * API:
 *
 * - [Timeline API](https://material-ui.com/api/timeline/)
 */

const Timeline = /*#__PURE__*/React.forwardRef(function Timeline(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: 'MuiTimeline'
  });

  const {
    position = 'right',
    className
  } = props,
        other = _objectWithoutPropertiesLoose(props, ["position", "className"]);

  const styleProps = _extends({}, props, {
    position
  });

  const classes = useUtilityClasses(styleProps);
  return /*#__PURE__*/_jsx(TimelineContext.Provider, {
    value: {
      position
    },
    children: /*#__PURE__*/_jsx(TimelineRoot, _extends({
      className: clsx(classes.root, className),
      styleProps: styleProps // @ts-expect-error TypeScript bug, need to keep unknown for DX
      ,
      ref: ref
    }, other))
  });
});
process.env.NODE_ENV !== "production" ? Timeline.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: PropTypes.node,

  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes.object,

  /**
   * className applied to the root element.
   */
  className: PropTypes.string,

  /**
   * The position where the TimelineContent should appear relative to the time axis.
   * @default 'right'
   */
  position: PropTypes.oneOf(['alternate', 'left', 'right']),

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes.object
} : void 0;
/**
 *
 * Demos:
 *
 * - [Timeline](https://material-ui.com/components/timeline/)
 *
 * API:
 *
 * - [Timeline API](https://material-ui.com/api/timeline/)
 */

export default Timeline;