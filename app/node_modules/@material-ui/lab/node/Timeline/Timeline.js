"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var _utils = require("@material-ui/core/utils");

var _unstyled = require("@material-ui/unstyled");

var _styles = require("@material-ui/core/styles");

var _TimelineContext = _interopRequireDefault(require("./TimelineContext"));

var _timelineClasses = require("./timelineClasses");

var _jsxRuntime = require("react/jsx-runtime");

const useUtilityClasses = styleProps => {
  const {
    position,
    classes
  } = styleProps;
  const slots = {
    root: ['root', position && `position${(0, _utils.capitalize)(position)}`]
  };
  return (0, _unstyled.unstable_composeClasses)(slots, _timelineClasses.getTimelineUtilityClass, classes);
};

const TimelineRoot = (0, _styles.experimentalStyled)('ul', {}, {
  name: 'MuiTimeline',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    const {
      styleProps
    } = props;
    return (0, _extends2.default)({}, styles.root, styleProps.position && styles[`position${(0, _utils.capitalize)(styleProps.position)}`]);
  }
})({
  display: 'flex',
  flexDirection: 'column',
  padding: '6px 16px',
  flexGrow: 1
});
/**
 *
 * Demos:
 *
 * - [Timeline](https://material-ui.com/components/timeline/)
 *
 * API:
 *
 * - [Timeline API](https://material-ui.com/api/timeline/)
 */

const Timeline = /*#__PURE__*/React.forwardRef(function Timeline(inProps, ref) {
  const props = (0, _styles.unstable_useThemeProps)({
    props: inProps,
    name: 'MuiTimeline'
  });
  const {
    position = 'right',
    className
  } = props,
        other = (0, _objectWithoutPropertiesLoose2.default)(props, ["position", "className"]);
  const styleProps = (0, _extends2.default)({}, props, {
    position
  });
  const classes = useUtilityClasses(styleProps);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TimelineContext.default.Provider, {
    value: {
      position
    },
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(TimelineRoot, (0, _extends2.default)({
      className: (0, _clsx.default)(classes.root, className),
      styleProps: styleProps // @ts-expect-error TypeScript bug, need to keep unknown for DX
      ,
      ref: ref
    }, other))
  });
});
process.env.NODE_ENV !== "production" ? Timeline.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: _propTypes.default.node,

  /**
   * Override or extend the styles applied to the component.
   */
  classes: _propTypes.default.object,

  /**
   * className applied to the root element.
   */
  className: _propTypes.default.string,

  /**
   * The position where the TimelineContent should appear relative to the time axis.
   * @default 'right'
   */
  position: _propTypes.default.oneOf(['alternate', 'left', 'right']),

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: _propTypes.default.object
} : void 0;
/**
 *
 * Demos:
 *
 * - [Timeline](https://material-ui.com/components/timeline/)
 *
 * API:
 *
 * - [Timeline API](https://material-ui.com/api/timeline/)
 */

var _default = Timeline;
exports.default = _default;