"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var _styles = require("@material-ui/core/styles");

var _utils = require("@material-ui/core/utils");

var _unstyled = require("@material-ui/unstyled");

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _TimelineContext = _interopRequireDefault(require("../Timeline/TimelineContext"));

var _timelineOppositeContentClasses = require("./timelineOppositeContentClasses");

var _jsxRuntime = require("react/jsx-runtime");

const useUtilityClasses = styleProps => {
  const {
    position,
    classes
  } = styleProps;
  const slots = {
    root: ['root', `position${(0, _utils.capitalize)(position)}`]
  };
  return (0, _unstyled.unstable_composeClasses)(slots, _timelineOppositeContentClasses.getTimelineOppositeContentUtilityClass, classes);
};

const TimelineOppositeContentRoot = (0, _styles.experimentalStyled)(_Typography.default, {}, {
  name: 'MuiTimelineOppositeContent',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    const {
      styleProps
    } = props;
    return (0, _extends2.default)({}, styles.root, styles[`position${(0, _utils.capitalize)(styleProps.position)}`]);
  }
})(({
  styleProps
}) => (0, _extends2.default)({
  /* Styles applied to the root element. */
  padding: '6px 16px',
  marginRight: 'auto',
  textAlign: 'right',
  flex: 1
}, styleProps.position === 'left' && {
  textAlign: 'left'
}));
const TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(inProps, ref) {
  const props = (0, _styles.unstable_useThemeProps)({
    props: inProps,
    name: 'MuiTimelineOppositeContent'
  });
  const {
    className
  } = props,
        other = (0, _objectWithoutPropertiesLoose2.default)(props, ["className"]);
  const {
    position: positionContext
  } = React.useContext(_TimelineContext.default);
  const styleProps = (0, _extends2.default)({}, props, {
    position: positionContext || 'left'
  });
  const classes = useUtilityClasses(styleProps);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(TimelineOppositeContentRoot, (0, _extends2.default)({
    component: "div",
    className: (0, _clsx.default)(classes.root, className),
    styleProps: styleProps,
    ref: ref
  }, other));
});
process.env.NODE_ENV !== "production" ? TimelineOppositeContent.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: _propTypes.default.node,

  /**
   * Override or extend the styles applied to the component.
   */
  classes: _propTypes.default.object,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: _propTypes.default.object
} : void 0;
TimelineOppositeContent.muiName = 'TimelineOppositeContent';
var _default = TimelineOppositeContent;
exports.default = _default;